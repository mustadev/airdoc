{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/clinic/clinic.component.ts","./src/app/components/clinic/clinic.component.html","./src/app/components/doctor-over-view/doctor-over-view.component.ts","./src/app/components/doctor-over-view/doctor-over-view.component.html","./src/app/components/doctor/doctor.component.ts","./src/app/components/doctor/doctor.component.html","./src/app/components/layout/footer/footer.component.ts","./src/app/components/layout/footer/footer.component.html","./src/app/components/layout/header/header.component.ts","./src/app/components/layout/header/header.component.html","./src/app/components/pages/about/about.component.ts","./src/app/components/pages/about/about.component.html","./src/app/components/pages/admin/admin-login/admin-login.component.ts","./src/app/components/pages/admin/admin-login/admin-login.component.html","./src/app/components/pages/admin/admin-profile/admin-profile.component.ts","./src/app/components/pages/admin/admin-profile/admin-profile.component.html","./src/app/components/pages/booking/booking.component.ts","./src/app/components/pages/booking/booking.component.html","./src/app/components/pages/contact/contact.component.ts","./src/app/components/pages/contact/contact.component.html","./src/app/components/pages/doctor/clinic-settings/clinic-settings.component.ts","./src/app/components/pages/doctor/clinic-settings/clinic-settings.component.html","./src/app/components/pages/doctor/doctor-appointment/doctor-appointment.component.ts","./src/app/components/pages/doctor/doctor-appointment/doctor-appointment.component.html","./src/app/components/pages/doctor/doctor-appointments/doctor-appointments.component.ts","./src/app/components/pages/doctor/doctor-appointments/doctor-appointments.component.html","./src/app/components/pages/doctor/doctor-change-password/doctor-change-password.component.ts","./src/app/components/pages/doctor/doctor-change-password/doctor-change-password.component.html","./src/app/components/pages/doctor/doctor-dash-board/doctor-dash-board.component.ts","./src/app/components/pages/doctor/doctor-dash-board/doctor-dash-board.component.html","./src/app/components/pages/doctor/doctor-profile-settings/doctor-profile-settings.component.ts","./src/app/components/pages/doctor/doctor-profile-settings/doctor-profile-settings.component.html","./src/app/components/pages/doctor/doctor-review/doctor-review.component.ts","./src/app/components/pages/doctor/doctor-review/doctor-review.component.html","./src/app/components/pages/doctor/doctor-reviews/doctor-reviews.component.ts","./src/app/components/pages/doctor/doctor-reviews/doctor-reviews.component.html","./src/app/components/pages/doctor/doctor-side-bar/doctor-side-bar.component.ts","./src/app/components/pages/doctor/doctor-side-bar/doctor-side-bar.component.html","./src/app/components/pages/doctor/login/login.component.ts","./src/app/components/pages/doctor/login/login.component.html","./src/app/components/pages/doctor/profile/profile.component.ts","./src/app/components/pages/doctor/profile/profile.component.html","./src/app/components/pages/doctor/signup/signup.component.ts","./src/app/components/pages/doctor/signup/signup.component.html","./src/app/components/pages/home/home.component.ts","./src/app/components/pages/home/home.component.html","./src/app/components/pages/patient/change-password/change-password.component.ts","./src/app/components/pages/patient/change-password/change-password.component.html","./src/app/components/pages/patient/login/login.component.ts","./src/app/components/pages/patient/login/login.component.html","./src/app/components/pages/patient/patient-appointment/patient-appointment.component.ts","./src/app/components/pages/patient/patient-appointment/patient-appointment.component.html","./src/app/components/pages/patient/patient-appointments/patient-appointments.component.ts","./src/app/components/pages/patient/patient-appointments/patient-appointments.component.html","./src/app/components/pages/patient/patient-side-bar/patient-side-bar.component.ts","./src/app/components/pages/patient/patient-side-bar/patient-side-bar.component.html","./src/app/components/pages/patient/profile/profile.component.ts","./src/app/components/pages/patient/profile/profile.component.html","./src/app/components/pages/patient/signup/signup.component.ts","./src/app/components/pages/patient/signup/signup.component.html","./src/app/components/pages/search/search.component.ts","./src/app/components/pages/search/search.component.html","./src/app/components/patient/patient.component.ts","./src/app/components/patient/patient.component.html","./src/app/components/rating-star/rating-star.component.ts","./src/app/components/rating-star/rating-star.component.html","./src/app/components/review-form/review-form.component.ts","./src/app/components/review-form/review-form.component.html","./src/app/components/review/review.component.ts","./src/app/components/review/review.component.html","./src/app/components/reviews/reviews.component.ts","./src/app/components/reviews/reviews.component.html","./src/app/models/Appointment.ts","./src/app/models/Clinic.ts","./src/app/models/ClinicLocation.ts","./src/app/models/Contact.ts","./src/app/models/Like.ts","./src/app/models/Password.ts","./src/app/models/Review.ts","./src/app/services/admin-auth.guard.ts","./src/app/services/appointment.service.ts","./src/app/services/auth-interceptor.service.ts","./src/app/services/auth.service.ts","./src/app/services/contact.service.ts","./src/app/services/doctor-auth.guard.ts","./src/app/services/doctor.service.ts","./src/app/services/patient-auth-guard.ts","./src/app/services/patient.service.ts","./src/app/services/review.service.ts","./src/app/services/token-storage.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactComponent } from './components/pages/contact/contact.component';\nimport { AboutComponent } from './components/pages/about/about.component';\nimport { HomeComponent } from './components/pages/home/home.component';\nimport { ProfileComponent as DoctorProfileComponent } from './components/pages/doctor/profile/profile.component';\nimport { LoginComponent as DoctorLoginComponent } from './components/pages/doctor/login/login.component';\nimport { SignupComponent as DoctorSingupComponent} from './components/pages/doctor/signup/signup.component';\nimport { DoctorDashBoardComponent } from './components/pages/doctor/doctor-dash-board/doctor-dash-board.component';\nimport { DoctorProfileSettingsComponent } from './components/pages/doctor/doctor-profile-settings/doctor-profile-settings.component';\nimport { DoctorChangePasswordComponent} from './components/pages/doctor/doctor-change-password/doctor-change-password.component';\nimport { ClinicSettingsComponent } from './components/pages/doctor/clinic-settings/clinic-settings.component';\nimport { DoctorAppointmentsComponent } from './components/pages/doctor/doctor-appointments/doctor-appointments.component'; \nimport { DoctorReviewsComponent } from './components/pages/doctor/doctor-reviews/doctor-reviews.component'; \nimport { LoginComponent as PatientLoginComponent } from './components/pages/patient/login/login.component';\nimport { SignupComponent as PatientSingupComponent} from './components/pages/patient/signup/signup.component';\nimport { ProfileComponent as PatientProfileComponent } from './components/pages/patient/profile/profile.component';\nimport { PatientAppointmentsComponent } from './components/pages/patient/patient-appointments/patient-appointments.component';\nimport { SearchComponent } from './components/pages/search/search.component';\n\nimport { DoctorAuthGuard } from './services/doctor-auth.guard';\nimport { PatientAuthGuard } from './services/patient-auth-guard';\nimport { ChangePasswordComponent } from './components/pages/patient/change-password/change-password.component';\nimport { BookingComponent } from './components/pages/booking/booking.component';\n\n// @ts-ignore\n// @ts-ignore\nconst routes: Routes = [\n  { path:  '', pathMatch: 'full', redirectTo: 'home' },\n  { path: 'home', component: HomeComponent },\n  { path: 'contact' , component: ContactComponent },\n  { path: 'about' , component: AboutComponent },\n  { path: 'doctor/profile/:id' , component: DoctorProfileComponent},\n  { path: 'doctor/login' , component: DoctorLoginComponent },\n  { path: 'doctor/signup' , component: DoctorSingupComponent },\n  { path: 'doctor/dashboard' , component: DoctorDashBoardComponent, canActivate: [DoctorAuthGuard]},\n  { path: 'doctor/profile-settings' , component: DoctorProfileSettingsComponent, canActivate: [DoctorAuthGuard]},\n  { path: 'doctor/clinic-settings' , component: ClinicSettingsComponent, canActivate: [DoctorAuthGuard]},\n  { path: 'doctor/appointments' , component: DoctorAppointmentsComponent, canActivate: [DoctorAuthGuard]},\n  { path: 'doctor/reviews' , component: DoctorReviewsComponent, canActivate: [DoctorAuthGuard]},\n  { path: 'doctor/change-password', component: DoctorChangePasswordComponent, canActivate: [DoctorAuthGuard]},\n  { path: 'patient/profile' , component: PatientProfileComponent, canActivate:[PatientAuthGuard]},\n  { path: 'patient/login' , component: PatientLoginComponent },\n  { path: 'patient/signup' , component: PatientSingupComponent },\n  { path: 'search' , component: SearchComponent },\n  { path: 'booking/:id' , component: BookingComponent, canActivate: [PatientAuthGuard]},\n  { path: 'patient/appointments' , component: PatientAppointmentsComponent, canActivate: [PatientAuthGuard]},\n  { path: 'patient/change-password' , component: ChangePasswordComponent, canActivate: [PatientAuthGuard]},\n  { path: '**', redirectTo: 'home' } //this must be the last\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from './services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  private roles: string[];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username: string;\n\n  constructor(private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit() {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      //console.log(user.roles);\n      //this.roles = user.roles;\n\n      //this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n     // this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n      this.username = user.username;\n    }\n  }\n\n  logout() {\n    this.tokenStorageService.signOut();\n    window.location.reload();\n  }\n}\n\n","<div class=\"main-wrapper\">\n    <app-header></app-header>\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AgmCoreModule } from '@agm/core';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PatientComponent } from './components/patient/patient.component';\nimport { DoctorComponent } from './components/doctor/doctor.component';\nimport { HeaderComponent } from './components/layout/header/header.component';\nimport { FooterComponent } from './components/layout/footer/footer.component';\nimport { AboutComponent } from './components/pages/about/about.component';\nimport { ContactComponent } from './components/pages/contact/contact.component';\nimport { HomeComponent } from './components/pages/home/home.component';\nimport { SearchComponent } from './components/pages/search/search.component';\nimport { ReviewComponent } from './components/review/review.component';\nimport { SignupComponent as DoctorSignupComponent } from './components/pages/doctor/signup/signup.component';\nimport { LoginComponent as DoctorLoginComponent } from './components/pages/doctor/login/login.component';\nimport { ProfileComponent as DoctorProfileComponent } from './components/pages/doctor/profile/profile.component';\nimport { SignupComponent as PatientSignupComponent } from './components/pages/patient/signup/signup.component';\nimport { LoginComponent as PatientLoginComponent } from './components/pages/patient/login/login.component';\nimport { ProfileComponent as PatientProfileComponent } from './components/pages/patient/profile/profile.component';\nimport { AuthInterceptor } from './services/auth-interceptor.service';\nimport { DoctorAuthGuard } from './services/doctor-auth.guard';\nimport { PatientAuthGuard } from './services/patient-auth-guard';\nimport { AdminAuthGuard } from './services/admin-auth.guard';\nimport { AdminProfileComponent } from './components/pages/admin/admin-profile/admin-profile.component';\nimport { AdminLoginComponent } from './components/pages/admin/admin-login/admin-login.component';\nimport { ChangePasswordComponent} from './components/pages/patient/change-password/change-password.component';\nimport { ReviewsComponent } from './components/reviews/reviews.component';\nimport { DoctorDashBoardComponent } from './components/pages/doctor/doctor-dash-board/doctor-dash-board.component';\nimport { DoctorProfileSettingsComponent } from './components/pages/doctor/doctor-profile-settings/doctor-profile-settings.component';\nimport { PatientAppointmentsComponent } from './components/pages/patient/patient-appointments/patient-appointments.component';\nimport { PatientAppointmentComponent } from './components/pages/patient/patient-appointment/patient-appointment.component';\n\nimport { BookingComponent } from './components/pages/booking/booking.component';\nimport { RatingStarComponent} from './components/rating-star/rating-star.component';\nimport { ClinicComponent } from './components/clinic/clinic.component';\nimport { DoctorOverViewComponent } from './components/doctor-over-view/doctor-over-view.component';\nimport { ReviewFormComponent } from './components/review-form/review-form.component';\nimport { ClinicSettingsComponent } from './components/pages/doctor/clinic-settings/clinic-settings.component';\nimport { DoctorSideBarComponent } from './components/pages/doctor/doctor-side-bar/doctor-side-bar.component';\nimport { PatientSideBarComponent } from './components/pages/patient/patient-side-bar/patient-side-bar.component';\nimport { DoctorAppointmentsComponent } from './components/pages/doctor/doctor-appointments/doctor-appointments.component';\nimport { DoctorAppointmentComponent } from './components/pages/doctor/doctor-appointment/doctor-appointment.component';\nimport { DoctorChangePasswordComponent } from './components/pages/doctor/doctor-change-password/doctor-change-password.component';\nimport { DoctorReviewsComponent } from './components/pages/doctor/doctor-reviews/doctor-reviews.component';\nimport { DoctorReviewComponent } from './components/pages/doctor/doctor-review/doctor-review.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PatientComponent,\n    DoctorComponent,\n    HeaderComponent,\n    FooterComponent,\n    AboutComponent,\n    ContactComponent,\n    HomeComponent,\n    SearchComponent,\n    ReviewComponent,\n    DoctorSignupComponent,\n    DoctorLoginComponent,\n    DoctorProfileComponent,\n    PatientSignupComponent,\n    PatientLoginComponent,\n    PatientProfileComponent,\n    AdminProfileComponent,\n    AdminLoginComponent,\n    ChangePasswordComponent,\n    ReviewsComponent,\n    DoctorDashBoardComponent,\n    PatientAppointmentsComponent,\n    PatientAppointmentComponent,\n    DoctorProfileSettingsComponent,\n    BookingComponent,\n    RatingStarComponent,\n    ClinicComponent,\n    DoctorOverViewComponent,\n    ReviewFormComponent,\n    ClinicSettingsComponent,\n    DoctorSideBarComponent,\n    PatientSideBarComponent,\n    DoctorAppointmentsComponent,\n    DoctorAppointmentComponent,\n    DoctorChangePasswordComponent,\n    DoctorReviewsComponent,\n    DoctorReviewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    AgmCoreModule.forRoot({})\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    {provide: LocationStrategy, useClass: HashLocationStrategy},\n    DoctorAuthGuard,\n    PatientAuthGuard,\n    AdminAuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Clinic } from 'src/app/models/Clinic';\nimport { Doctor } from 'src/app/models/Doctor';\nimport { DoctorService } from 'src/app/services/doctor.service';\n\n@Component({\n  selector: 'app-clinic',\n  templateUrl: './clinic.component.html',\n  styleUrls: ['./clinic.component.css']\n})\nexport class ClinicComponent implements OnInit {\n\n  @Input() clinic:Clinic;\n  @Input() doctor:Doctor;\n  clinicPhotos:any[];\n  constructor(\n    private doctorService:DoctorService\n  ) { }\n\n  ngOnInit(): void {\n    console.log(\"Clinic: \", JSON.stringify(this.clinic));\n    this.doctorService.getClinicPhotos(this.doctor.id).subscribe(photos => {\n      photos.filter(photo => {\n        console.log(\"photo \", photo);\n        return photo === null;\n      });\n      this.clinicPhotos = photos.map(photo => {\n        return {\n          \"id\": photo.id,\n          \"image\": 'data:image/jpeg;base64,' + photo.image.data\n        };\n      });\n    })\n  }\n\n}\n","<div class=\"row\">\n    <!-- Clinic Content -->\n    <div class=\"col-md-10\">\n        <div class=\"clinic-content\">\n            <h4 class=\"clinic-name\">{{clinic?.name}}</h4>\n            <p class=\"doc-speciality\">{{doctor?.speciality}}</p>\n            <!-- <div class=\"clinic-details mb-0\">\n                <h5 class=\"clinic-direction\"> <i class=\"fas fa-map-marker-alt\"></i>\n                    {{clinic?.address}} <br></h5>\n            </div> -->\n            <div class=\"clinic-details mb-0\">\n                <p class=\"clinic-direction\"> <i class=\"fas fa-map-marker-alt\"></i> {{clinic.address}}</p>\n                <ul>\n                    <li *ngFor=\"let clinicPhoto of clinicPhotos\">\n                        <a [href]=\"clinicPhoto.image\" data-fancybox=\"gallery2\">\n                            <img [src]=\"clinicPhoto.image\" alt=\"Feature Image\">\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <!-- /Clinic Content -->\n\n    <div class=\"col-md-2\">\n        <div class=\"consult-price\">\n            {{clinic?.consultPrice | currency}}\n        </div>\n    </div>\n    <div  class=\"col-md-12 mt-5\">\n        <h5 class=\"clinic-direction\"> <i class=\"fas fa-map-marker-alt\"></i>\n            Clinic Location <br></h5>\n        <agm-map \n        [latitude]=\"clinic.location.latitude\" \n        [longitude]=\"clinic.location.longitude\" \n        [zoom]=\"clinic.location.zoom\">\n        <agm-marker \n            [latitude]=\"clinic.location.latitude\" \n            [longitude]=\"clinic.location.longitude\"\n            [markerDraggable]=\"false\">\n        </agm-marker>\n    </agm-map>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Doctor } from 'src/app/models/Doctor';\nimport { Clinic } from 'src/app/models/Clinic';\n\n@Component({\n  selector: 'app-over-view',\n  templateUrl: './doctor-over-view.component.html',\n  styleUrls: ['./doctor-over-view.component.css']\n})\nexport class DoctorOverViewComponent implements OnInit {\n\n  @Input() doctor:Doctor;\n  @Input() clinic:Clinic;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n\n    <div class=\"col-md-12 col-lg-9\">\n\n        <!-- About Details -->\n        <div class=\"widget about-widget\">\n            <h4 class=\"widget-title\">About Me</h4>\n            <p>{{doctor?.aboutMe}}</p>\n        </div>\n        <!-- /About Details -->\n\n\n        <!-- Services List -->\n        <div class=\"service-list\">\n            <h4>Services</h4>\n            <ul class=\"clearfix\">\n                <li *ngFor=\"let service of clinic?.services\">{{service}} </li>\n            </ul>\n        </div>\n        <!-- /Services List -->\n\n        <!-- Specializations List -->\n        <div class=\"service-list\">\n            <h4>Specializations</h4>\n            <ul class=\"clearfix\">\n                <li *ngFor=\"let speciality of clinic?.specialities\">{{speciality}} </li>\n            </ul>\n        </div>\n        <!-- /Specializations List -->\n    </div>\n\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Doctor } from 'src/app/models/Doctor';\nimport { DoctorService } from 'src/app/services/doctor.service';\nimport { Clinic } from 'src/app/models/Clinic';\n\n@Component({\n  selector: 'app-doctor',\n  templateUrl: './doctor.component.html',\n  styleUrls: ['./doctor.component.css']\n})\nexport class DoctorComponent implements OnInit {\n  @Input() doctor: Doctor;\n  clinic:Clinic;\n  clinicPhotos:Array<any>;\n  retrievedAvatar:string;\n  retrieveResonse:any;\n  base64Data:string;\n  speciality: string;\n  showDefaultAvatar:boolean = false;\n\n  constructor(private doctorService:DoctorService) { }\n\n  ngOnInit(): void {\n    //Get Doctor Avatar\n    this.doctorService.getAvatar(this.doctor.id).subscribe(res=> {\n      this.retrieveResonse = res;\n      this.base64Data = this.retrieveResonse?.image?.data;\n      this.retrievedAvatar = 'data:image/jpeg;base64,' + this.base64Data;\n      console.log(res);\n      //console.log(\"base64\", this.base64Data);\n      console.log(\"retrievedAvatar: \", this.retrievedAvatar);\n      if (res?.image?.data === undefined){\n        this.showDefaultAvatar = true;\n        console.log(\"show default\");\n        \n      }\n    });\n    //Get Doctor Clinic\n    this.doctorService.getClinic(this.doctor.id).subscribe(res => {\n      this.clinic = res\n    });\n\n    //Get Clinic Photos\n    this.doctorService.getClinicPhotos(this.doctor.id).subscribe(res => {\n      //Convert image to base64 and return it;\n      this.clinicPhotos = res.map(photo => 'data:image/jpeg;base64,' + photo.image.data);\n    });\n\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <div class=\"doctor-widget\">\n            <div class=\"doc-info-left\">\n                <div class=\"doctor-img\">\n                    <a routerLink=\"/doctor/profile/{{doctor?.id}}\">\n                        <!-- <img [src]=\"retrievedAvatar\" class=\"img-fluid\" alt=\"Doctor Image\"> -->\n                        <img *ngIf=\"!showDefaultAvatar\" [src]=\"retrievedAvatar\" class=\"img-fluid\"  alt=\"Doctor Image\">\n                        <img *ngIf=\"showDefaultAvatar\" src=\"assets/img/doctors/default-doctor.png\"  class=\"img-fluid\" alt=\"Doctor Image\">\n                   \n                    </a>\n                </div>\n                <div class=\"doc-info-cont\">\n                    <h4 class=\"doc-name\"><a routerLink=\"/doctor/profile/{{doctor?.id}}\">{{doctor?.firstname | titlecase}} {{doctor?.lastname | titlecase}}</a></h4>\n                    <p class=\"doc-speciality\">{{doctor?.speciality }}</p>\n                    <h5 class=\"doc-department\">{{doctor?.speciality}}</h5>\n                    <div class=\"rating\">\n                        <app-rating-star [ratedCount]=\"doctor?.rating\" ></app-rating-star>\n                        <span class=\"d-inline-block average-rating\">({{doctor?.averageRating}})</span>\n                    </div>\n                    <div class=\"clinic-details\">\n                        <p class=\"doc-location\"><i class=\"fas fa-map-marker-alt\"></i>  {{clinic?.country | titlecase }} {{clinic?.city | titlecase}}</p>\n                        <ul class=\"clinic-gallery\">\n                            <li *ngFor=\"let photo of clinicPhotos\">\n                                <a routerLink=\"/doctor/profile/{{doctor?.id}}\" data-fancybox=\"gallery\">\n                                <img [src]=\"photo\" alt=\"Feature\">  \n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"clinic-services\">\n                        <span *ngFor=\" let service of clinic?.services\"> {{service}} </span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"doc-info-right\">\n                <div class=\"clini-infos\">\n                    <ul>\n                        <li><i class=\"far fa-comment\"></i> {{doctor?.reviews?.length}} Feedback</li>\n                        <li><i class=\"fas fa-map-marker-alt\"></i> {{clinic?.country + \" \" + clinic?.city}}</li>\n                        <li><i class=\"far fa-money-bill-alt\"></i> {{clinic?.minPrice | currency}} - {{clinic?.maxPrice | currency}}  </li>\n                    </ul>\n                </div>\n                <div class=\"clinic-booking\">\n                    <a class=\"view-pro-btn\" routerLink=\"/doctor/profile/{{doctor?.id}}\">Voir Doctor</a>\n                    <a class=\"apt-btn\" routerLink=\"/booking/{{doctor?.id}}\">BOOK APPOINTMENT</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { User } from 'src/app/models/User';\n\n  const DOCTOR = \"DOCTOR\";\n  const PATIENT = \"PATIENT\";\n  const ADMIN = \"ADMIN\";\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  private roles: string[];\n  isLoggedIn = false;\n  //showAdminBoard = false;\n  //showModeratorBoard = false;\n  showDoctorMenu = false;\n  showPatientMenu = false;\n  showAdminMenu = false;\n  username: string;\n  loggedInUser:any;\n\n  constructor(\n    private authService:AuthService,\n    private tokenStorageService:TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    this.authService.getLoggedInUser.subscribe((user:User) => this.updateFooter(user));\n\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      const userType = this.tokenStorageService.getUserType();\n      this.roles = user.roles;\n\n      //this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      //this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n      this.showDoctorMenu = userType == DOCTOR;\n      this.showPatientMenu = userType == PATIENT;\n      this.showAdminMenu = userType == ADMIN;\n      console.log(\"userType \" + userType);\n      console.log(\"showDoctorMenu: \" +  this.showDoctorMenu);\n      this.username = user.username;\n    }\n  }\n\n  updateFooter(user:User){\n    console.log(\"LoggerInUser \" + user);\n      this.isLoggedIn = true;\n      this.loggedInUser = user;\n      console.log(\"logged in user : \" + this.loggedInUser);\n      this.showDoctorMenu = user.userType == DOCTOR;\n      console.log(\"showDoctorMenu\");\n      console.log(this.showDoctorMenu);\n      this.showPatientMenu = user.userType == PATIENT;\n      console.log(\"this.showPatientMenu\");\n      console.log(this.showPatientMenu);\n      this.showAdminMenu = user.userType == ADMIN;\n      console.log(\"this.showAdminMenu\");\n      console.log(this.showAdminMenu);\n  }\n}\n","<footer class=\"footer\">\n    <!-- Footer Top -->\n    <div class=\"footer-top\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-lg-3 col-md-6\">\n                \n                    <!-- Footer Widget -->\n                    <div class=\"footer-widget footer-about\">\n                        <div class=\"footer-logo\">\n                            <img src=\"assets/img/footer-logo.png\" alt=\"logo\">\n                        </div>\n                        <div class=\"footer-about-content\">\n                            <p>AirDoc est une application marocaine fondée en 2020 qui propose un service de gestion en ligne des consultations </p>\n                            <div class=\"social-icon\">\n                                <ul>\n                                    <li>\n                                        <a href=\"#\" target=\"_blank\"><i class=\"fab fa-facebook-f\"></i> </a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\" target=\"_blank\"><i class=\"fab fa-twitter\"></i> </a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\" target=\"_blank\"><i class=\"fab fa-linkedin-in\"></i></a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\" target=\"_blank\"><i class=\"fab fa-instagram\"></i></a>\n                                    </li>\n                                    <li>\n                                        <a href=\"#\" target=\"_blank\"><i class=\"fab fa-dribbble\"></i> </a>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- /Footer Widget -->\n                    \n                </div>\n                \n                <div class=\"col-lg-3 col-md-6\">\n                \n                    <!-- Footer Widget -->\n                    <div *ngIf=\"!showDoctorMenu\" class=\"footer-widget footer-menu\">\n                        <h2 class=\"footer-title\">For Patients</h2>\n                        <ul>\n                            <li><a routerLink=\"/search\"><i class=\"fas fa-angle-double-right\"></i> Search for Doctors</a></li>\n                            <li><a *ngIf=\"!isLoggedIn \" routerLink=\"/patient/login\"><i class=\"fas fa-angle-double-right\"></i> Login</a></li>\n                            <li><a *ngIf=\"!isLoggedIn \" routerLink=\"/patient/signup\"><i class=\"fas fa-angle-double-right\"></i> Register</a></li>\n                            <li ><a *ngIf=\"showPatientMenu\" routerLink=\"/patient/profile\"><i class=\"fas fa-angle-double-right\"></i> Patient Dashboard</a></li>\n                        </ul>\n                    </div>\n                    <!-- /Footer Widget -->\n                    \n                </div>\n                \n                <div class=\"col-lg-3 col-md-6\">\n                \n                    <!-- Footer Widget -->\n                    <div *ngIf=\"!showPatientMenu\" class=\"footer-widget footer-menu\">\n                        <h2 class=\"footer-title\">For Doctors</h2>\n                        <ul>\n                            <li *ngIf=\"showDoctorMenu\"><a routerLink=\"/doctor/appointments\"><i class=\"fas fa-angle-double-right\"></i> Appointments</a></li>\n                            <li><a *ngIf=\"!isLoggedIn\" routerLink=\"/doctor/login\"><i class=\"fas fa-angle-double-right\"></i> Login</a></li>\n                            <li><a *ngIf=\"!isLoggedIn\" routerLink=\"/doctor/signup\"><i class=\"fas fa-angle-double-right\"></i> Register</a></li>\n                         </ul>\n                    </div>\n                    <!-- /Footer Widget -->\n                    \n                </div>\n                \n                <div class=\"col-lg-3 col-md-6\">\n                \n                    <!-- Footer Widget -->\n                    <div class=\"footer-widget footer-contact\">\n                        <h2 class=\"footer-title\">Contact Us</h2>\n                        <div class=\"footer-contact-info\">\n                            <div class=\"footer-address\">\n                                <span><i class=\"fas fa-map-marker-alt\"></i></span>\n                                <p>Agadir,<br> Morocco </p>\n                            </div>\n                            <p>\n                                <i class=\"fas fa-phone-alt\"></i>\n                                +212 555555555\n                            </p>\n                            <p class=\"mb-0\">\n                                <i class=\"fas fa-envelope\"></i>\n                                airdoc@example.com\n                            </p>\n                        </div>\n                    </div>\n                    <!-- /Footer Widget -->\n                    \n                </div>\n                \n            </div>\n        </div>\n    </div>\n    <!-- /Footer Top -->\n    \n    <!-- Footer Bottom -->\n    <div class=\"footer-bottom\">\n        <div class=\"container-fluid\">\n        \n            <!-- Copyright -->\n            <div class=\"copyright\">\n                <div class=\"row\">\n                    <div class=\"col-md-6 col-lg-6\">\n                        <div class=\"copyright-text\">\n                            <p class=\"mb-0\"></p>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-lg-6\">\n                    \n                        <!-- Copyright Menu -->\n                        <div class=\"copyright-menu\">\n                            <ul class=\"policy-menu\">\n                                <li><a routerLink=\"/term-condition\">Terms and Conditions</a></li>\n                                <li><a routerLink=\"/privacy-policy\">Policy</a></li>\n                            </ul>\n                        </div>\n                        <!-- /Copyright Menu -->\n                        \n                    </div>\n                </div>\n            </div>\n            <!-- /Copyright -->\n            \n        </div>\n    </div>\n    <!-- /Footer Bottom -->\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { User } from 'src/app/models/User';\nimport { Router } from '@angular/router';\n\n\n  const DOCTOR = \"DOCTOR\";\n  const PATIENT = \"PATIENT\";\n  const ADMIN = \"ADMIN\";\n  \n  @Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n  })\nexport class HeaderComponent implements OnInit {\n\n  \n  private roles: string[];\n  isLoggedIn = false;\n  //showAdminBoard = false;\n  //showModeratorBoard = false;\n  showDoctorMenu = false;\n  showPatientMenu = false;\n  showAdminMenu = false;\n  username: string;\n  loggedInUser:any;\n\n  constructor(\n    private tokenStorageService: TokenStorageService, \n    private authService: AuthService,\n    private router:Router) { }\n\n  ngOnInit() {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    this.authService.getLoggedInUser.subscribe((user:User) => this.updateHeader(user));\n\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      const userType = this.tokenStorageService.getUserType();\n      this.roles = user.roles;\n\n      //this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      //this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n      this.showDoctorMenu = userType == DOCTOR;\n      this.showPatientMenu = userType == PATIENT;\n      this.showAdminMenu = userType == ADMIN;\n      console.log(\"userType \" + userType);\n      console.log(\"showDoctorMenu: \" +  this.showDoctorMenu);\n      this.username = user.username;\n    }\n  }\n\n  logout() {\n    this.tokenStorageService.signOut();\n    //window.location.reload();\n    this.router.navigate([\"home\"]).then(()=> {\n      window.location.reload();\n    });\n  }\n\n  updateHeader(user:User){\n    console.log(\"LoggerInUser \", user);\n      this.isLoggedIn = true;\n      this.loggedInUser = user;\n      console.log(\"logged in user : \" + this.loggedInUser);\n      this.showDoctorMenu = user.userType == DOCTOR;\n      console.log(\"showDoctorMenu\");\n      console.log(this.showDoctorMenu);\n      this.showPatientMenu = user.userType == PATIENT;\n      console.log(\"this.showPatientMenu\");\n      console.log(this.showPatientMenu);\n      this.showAdminMenu = user.userType == ADMIN;\n      console.log(\"this.showAdminMenu\");\n      console.log(this.showAdminMenu);\n  }\n\n}\n","<header class=\"header\">\n    <nav class=\"navbar navbar-expand-lg header-nav\">\n        <div class=\"navbar-header\">\n            <a id=\"mobile_btn\" href=\"javascript:void(0);\">\n                <span class=\"bar-icon\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </span>\n            </a>\n            <a routerLink=\"home\" class=\"navbar-brand logo\">\n                <img src=\"assets/img/logo.png\" class=\"img-fluid\" alt=\"Logo\">\n            </a>\n        </div>\n        <div class=\"main-menu-wrapper\">\n            <div class=\"menu-header\">\n                <a routerLink=\"home\" class=\"menu-logo\">\n                    <img src=\"assets/img/logo.png\" class=\"img-fluid\" alt=\"Logo\">\n                </a>\n                <a id=\"menu_close\" class=\"menu-close\" routerLink=\"javascript:void(0);\">\n                    <i class=\"fas fa-times\"></i>\n                </a>\n            </div>\n            <ul class=\"main-nav\" *ngIf=\"!showPatientMenu && !showDoctorMenu && !showAdminMenu\">\n                <li routerLinkActive=\"active\">\n                    <a routerLink=\"/home\">Home</a>\n                </li>\n                <li class=\"has-submenu\" routerLinkActive=\"active\">\n                <li><a routerLink=\"/search\">Search Doctors</a>\n                </li>\n                <li class=\"has-submenu\" routerLinkActive=\"active\">\n                    <a routerLink=\"/contact\">Contact Us</a>\n                </li>\n                <li class=\"has-submenu\" routerLinkActive=\"active\">\n                    <a routerLink=\"/about\">About Us</a>\n                </li>\n            </ul>\n            <ul class=\"main-nav\" *ngIf=\"showPatientMenu\">\n                <li routerLinkActive=\"active\">\n                    <a routerLink=\"/home\">Home</a>\n                </li>\n                <li class=\"has-submenu\" routerLinkActive=\"active\">\n                    <a routerLink=\"/patient/appointments\">Appointments</a>\n                    <!-- <a href=\"#\">Settings <i class=\"fas fa-chevron-down\"></i></a>\n                    <ul class=\"submenu\">\n                        <li routerLinkActive=\"active\"><a routerLink=\"/patient/profile\">Profile Settings</a></li>\n                        <li routerLinkActive=\"active\"><a routerLink=\"/patient/edit-password\">Change Password</a></li>\n                    </ul> -->\n                </li>\n                <li class=\"has-submenu\" routerLinkActive=\"active\"><a routerLink=\"/search\" >Search Doctors</a>\n                </li>\n                <li class=\"has-submenu\" routerLinkActive=\"active\">\n                    <a routerLink=\"/contact\">Contact Us</a>\n                </li>\n                <li class=\"has-submenu\" routerLinkActive=\"active\">\n                    <a routerLink=\"/about\">About Us</a>\n                </li>\n            </ul>\n            <ul class=\"main-nav\" *ngIf=\"showDoctorMenu\">\n                <li routerLinkActive=\"active\">\n                    <a routerLink=\"/home\">Home</a>\n                </li>\n\n                <li class=\"has-submenu\">\n                    <a routerLink=\"/doctor/appointments\" routerLinkActive=\"active\">Appointments</a>\n                    <!-- <ul class=\"submenu\">\n                        <li routerLinkActive=\"active\"><a routerLink=\"/doctor/profile-settings\" routerLinkActive=\"active\">Profile Settings</a></li>\n                        <li routerLinkActive=\"active\"><a routerLink=\"/doctor/change-password\" routerLinkActive=\"active\">Change Password</a></li>\n                    </ul> -->\n                </li>\n                <li class=\"has-submenu\">\n                    <a routerLink=\"/contact\" routerLinkActive=\"active\">Contact Us</a>\n                </li>\n                <li class=\"has-submenu\" routerLinkActive=\"active\">\n                    <a routerLink=\"/about\">About Us</a>\n                </li>\n            </ul>\n            <ul class=\"main-nav\" *ngIf=\"showAdminMenu\">\n                <li routerLinkActive=\"active\">\n                    <a routerLink=\"/home\">Home</a>\n                </li>\n                <li class=\"has-submenu\" routerLinkActive=\"active\">\n                    <a routerLink=\"/admin\" routerLinkActive=\"active\">Admin</a>\n                </li>\n            </ul>\n        </div>\n        <ul class=\"nav header-navbar-rht\" *ngIf=\"!isLoggedIn\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link header-login\" routerLink=\"/patient/login\">login / Signup </a>\n            </li>\n        </ul>\n\n        <ul class=\"nav header-navbar-rht\" *ngIf=\"isLoggedIn\">\n\n            <li class=\"nav-item\">\n                <a class=\"btn nav-link header-login\" (click)=\"logout()\">logout </a>\n            </li>\n        </ul>\n    </nav>\n</header>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Page Content -->\n<div class=\"content\">\n    <div class=\"container\">\n        <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-8\">\n                <div class=\"about\">\n                    <p>AirDoc est une application marocaine fondée en 2020 \n                        qui propose un service de gestion en ligne des consultations \n                        pour les professionnels de santé et un service de prise de rendez-vous en ligne \n                        pour les patients</p>  \n                </div>\n                                \n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../../services/auth.service'\nimport { TokenStorageService } from '../../../../services/token-storage.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/models/User';\n\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n  retUrl:string = \"admin/profile\";\n\n  constructor(\n    private authService: AuthService,\n    private tokenStorage: TokenStorageService,\n    private router:Router,\n    private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n    this.activatedRoute.queryParamMap\n                .subscribe(params => {\n            this.retUrl = params.get('retUrl'); \n            console.log( 'LoginComponent/ngOnInit '+ this.retUrl);\n        });\n  }\n\n  onSubmit() {\n    this.authService.adminLogin(this.form).subscribe(\n      (user:User) => {\n        this.tokenStorage.saveToken(user.accessToken);\n        this.tokenStorage.saveUser(user);\n        this.tokenStorage.saveUserType(user.userType);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.authService.getLoggedInUser.emit(user);\n        console.log(\"login successful\");\n        console.log(this.tokenStorage.getUser());\n        console.log( 'return to '+ this.retUrl);\n           if (this.retUrl!=null) {\n                this.router.navigate( [this.retUrl]);\n           } else {\n                this.router.navigate( ['admin/profile']);\n           }\n           \n        \n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  \n}","<div class=\"content \">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n\n                <!-- Login Tab Content -->\n                <div class=\"account-content\">\n                    <div class=\"row align-items-center justify-content-center\">\n                        <div class=\"col-md-7 col-lg-6 login-left\">\n                            <img src=\"assets/img/login-banner.png\" class=\"img-fluid\" alt=\"AirDoc Login\">\n                        </div>\n                        <div class=\"col-md-12 col-lg-6 login-right\">\n                            <div class=\"login-header\">\n                                <h3>Login <span>AirDoc</span></h3>\n                            </div>\n                            <form *ngIf=\"!isLoggedIn\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\"\n                                novalidate>\n                                <div class=\"form-group\">\n                                    <div\n                                      class=\"alert alert-danger\"\n                                      role=\"alert\"\n                                      *ngIf=\"f.submitted && isLoginFailed\"\n                                    >\n                                      Login failed: {{ errorMessage }}\n                                    </div>\n                                  </div>\n                                <div class=\"form-group form-focus\">\n                                    <input class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\" required\n                                        #email=\"ngModel\" type=\"email\" class=\"form-control floating\">\n                                    <label class=\"focus-label\">Email</label>\n                                    \n                                    </div>\n                                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && email.invalid\"> Email is required!</div>\n                                    <div class=\"form-group form-focus\">\n                                        <input name=\"password\" [(ngModel)]=\"form.password\" required minlength=\"6\"\n                                            #password=\"ngModel\" type=\"password\" class=\"form-control floating\">\n                                        <label class=\"focus-label\">Password</label>\n                                        \n                                    </div>\n                                    <div class=\"alert alert-danger\" role=\"alert\"\n                                            *ngIf=\"f.submitted && password.invalid\">\n                                            <div *ngIf=\"password.errors.required\">Password is required</div>\n                                            <div *ngIf=\"password.errors.minlength\">\n                                                Password must be at least 6 characters\n                                            </div>\n                                        </div>\n                                    <div class=\"text-right\">\n                                        <a class=\"forgot-link\" routerLink=\"/doctor/forgot-password\">Forgot Password ?</a>\n                                    </div>\n                                    <button class=\"btn btn-primary btn-block btn-lg login-btn\"\n                                        type=\"submit\">Login</button>\n                                    \n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <!-- /Login Tab Content -->\n\n            </div>\n        </div>\n\n    </div>\n\n</div>\n<!-- /Page Content -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-profile',\n  templateUrl: './admin-profile.component.html',\n  styleUrls: ['./admin-profile.component.css']\n})\nexport class AdminProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-profile works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { Appointment } from 'src/app/models/Appointment';\nimport { Doctor } from 'src/app/models/Doctor';\nimport { Patient } from 'src/app/models/Patient';\nimport { DoctorService } from 'src/app/services/doctor.service';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { AppointmentService } from 'src/app/services/appointment.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-booking',\n  templateUrl: './booking.component.html',\n  styleUrls: ['./booking.component.css']\n})\nexport class BookingComponent implements OnInit {\n  doctor:Doctor;\n  doctorAvatar:any\n  patient:Patient;\n  appointment:Appointment = new Appointment();\n  appointmentDate:string;\n  successMessage:string=\"\";\n  constructor(\n    private route:ActivatedRoute, \n    //private location:Location,\n    private router:Router,\n    private authService:AuthService,\n    private doctorService:DoctorService,\n    private patientService:PatientService,\n    private appointmentService:AppointmentService) { }\n\n  ngOnInit(): void {\n    this.route.params\n  .subscribe(\n    (params: Params) => {\n       params['id'];\n      this.doctorService.getById(params['id']).subscribe(res =>{\n        this.doctor = res;\n        this.appointment.doctorId = this.doctor.id;\n\n        console.log(\"Doctor: \" + this.doctor.id);\n      });\n      this.doctorService.getAvatar(params['id']).subscribe(avatar =>{\n        this.doctorAvatar = 'data:image/jpeg;base64,' + avatar?.image?.data;\n      })\n  });\n  this.authService.getCurrentUser().subscribe(user => {\n    this.patientService.getById(user.id).subscribe(res => {\n      this.patient = res;\n      this.appointment.patientId = this.patient.id;\n      console.log(\"Patient: \" + this.patient.id);\n    })\n  });\n  \n}\n\nonSubmit(){\n  console.log(\"date : \", this.appointmentDate);\n  console.log(JSON.stringify(this.appointment));\n  const appDate = new Date(this.appointmentDate);\n  const bookingDate = new Date(); //TODO cela devrait être fait à back-end\n  this.appointment.state = \"PENDING\";\n  this.appointment.appointmentDate = appDate.toISOString();\n  this.appointment.bookingDate = bookingDate.toISOString();\n  console.log(\"iso date\", appDate.toISOString());\n  console.log(\"appoin\", JSON.stringify(this.appointment));\n  this.appointmentService.add(this.appointment).subscribe(res => {\n    console.log(\"appointment added\", JSON.stringify(res));\n    this.appointmentDate = \"\";\n    this.appointment.description = \"\";\n    this.successMessage = \"Appointments Sent\";\n    setTimeout(()=>{   \n      this.successMessage = '';\n }, 3000);\n  });\n  \n  //this.location.back();\n  //this.router.navigate([\"home\"]);\n}\n\n}\n","<!-- Breadcrumb -->\n<div class=\"breadcrumb-bar\">\n    <div class=\"container-fluid\">\n        <div class=\"row align-items-center\">\n            <div class=\"col-md-12 col-12\">\n                <nav aria-label=\"breadcrumb\" class=\"page-breadcrumb\">\n                    <ol class=\"breadcrumb\">\n                        <li class=\"breadcrumb-item\"><a href=\"index-2.html\">Home</a></li>\n                        <li class=\"breadcrumb-item active\" aria-current=\"page\">Booking</li>\n                    </ol>\n                </nav>\n                <h2 class=\"breadcrumb-title\">Booking</h2>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- /Breadcrumb -->\n\n<!-- Page Content -->\n<div class=\"content\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <div class=\"booking-doc-info\">\n                            <a routerLink=\"/doctor/profile/{{doctor.id}}\" class=\"booking-doc-img\">\n                                <img [src]=\"doctorAvatar\" alt=\"Doctor Image\">\n                            </a>\n                            <div class=\"booking-info\">\n                                <h4><a routerLink=\"/doctor/profile/{{doctor.id}}\">Dr. {{doctor?.firstname | titlecase }}\n                                        {{doctor?.lastname | titlecase }}</a></h4>\n                                <app-rating-star [ratedCount]=\"doctor?.rating\" [readonly]=\"true\"></app-rating-star>\n                                <span class=\"d-inline-block average-rating\">{{doctor?.averageRating}}</span>\n                            </div>\n                            <!-- <p class=\"text-muted mb-0\"><i class=\"fas fa-map-marker-alt\"></i> , </p> -->\n                        </div>\n                    </div>\n                </div>\n                <!-- Schedule Widget -->\n                <div class=\"card booking-schedule schedule-widget\">\n                    <!-- Schedule Content -->\n                    <div class=\"schedule-cont\">\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <div class=\"container\">\n                                    <div class=\"panel panel-primary\">\n                                        <div class=\"panel-heading\">Schedule an Appointment</div>\n                                        <div class=\"panel-body\">\n                                            <div class=\"row\">\n                                                <div class=\"col-md-8\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"control-label\">Description</label>\n                                                        <textarea [(ngModel)]=\"appointment.description\"\n                                                            class=\"form-control\" rows=\"5\"></textarea>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"col-md-4\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"control-label\">Appointment Date</label>\n                                                        <input [(ngModel)]=\"appointmentDate\" type=\"datetime-local\"\n                                                            class=\"form-control\" name=\"appointmentDate\">\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                            <input (click)=\"onSubmit()\" type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n                                        </div>\n                                        <div *ngIf=\"successMessage\" class=\"alert alert-success\">\n                                            <strong>Success!</strong> {{successMessage}}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- /Schedule Content -->\n\n                </div>\n                <!-- /Schedule Widget -->\n\n            </div>\n        </div>\n    </div>\n</div>","import { ContactService } from './../../../services/contact.service';\nimport { Router } from '@angular/router';\nimport { Contact } from './../../../models/Contact';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  contact:Contact = new Contact();\n  submitted=false;\n\n  constructor(\n    private contactService:ContactService,\n    private router:Router) { }\n\n  ngOnInit(): void {\n  }\n \n  onSubmit(){\n    this.submitted = true;\n    console.log(\"submiting contact Contact \", JSON.stringify(this.contact));\n    this.contactService.addContact(this.contact).subscribe(res => {\n      console.log(\"submiting contact Contact \", JSON.stringify(res));\n      this.router.navigate(['home']);\n    })\n  }\n}\n","<section class=\"cmspage mtb-40\">\n    <div class=\"container\">\n      <div class=\"page-desc\" [hidden]=\"submitted\">\n        <div class=\"row justify-content-center\">\n          <div class=\"col-md-8\">\n            <h1>Contact</h1>\n            <form (ngSubmit)=\"onSubmit()\" #addContact=\"ngForm\">\n              <div class=\"form-group\">\n                <input type=\"text\" name=\"name\" id=\"name\" [(ngModel)]=\"contact.name\" class=\"form-control\" placeholder=\"Name\" required #name=\"ngModel\">\n                <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"error\">\n                  <div *ngIf=\"name.errors.required\">\n                    Name is required.\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <input type=\"text\" name=\"email\" id=\"email\" [(ngModel)]=\"contact.email\" class=\"form-control\" placeholder=\"E-Mail\" required email #email=\"ngModel\">\n                <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"error\">\n                  <div *ngIf=\"email.errors.required\">Email is required.</div>\n                  <div *ngIf=\"email.errors.email\">Email must be a valid email address.</div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <input type=\"text\" name=\"phone\" id=\"phone\" [(ngModel)]=\"contact.phone\" class=\"form-control\" placeholder=\"Phone\">\n              </div>\n              <div class=\"form-group\">\n                <textarea name=\"message\" id=\"message\" [(ngModel)]=\"contact.message\" rows=\"5\" class=\"form-control\" placeholder=\"Message\" required #message=\"ngModel\"></textarea>\n                <div *ngIf=\"message.invalid && (message.dirty || message.touched)\" class=\"error\">\n                  <div *ngIf=\"message.errors.required\">Message is required.</div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <button [disabled]=\"!addContact.form.valid\" class=\"btn btn-success\">Send Message</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>","import { Component, OnInit, Type } from '@angular/core';\nimport { Doctor } from 'src/app/models/Doctor';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { DoctorService } from 'src/app/services/doctor.service';\nimport { Clinic } from 'src/app/models/Clinic';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { ClinicLocation } from 'src/app/models/ClinicLocation';\n\n@Component({\n  selector: 'app-clinic-settings',\n  templateUrl: './clinic-settings.component.html',\n  styleUrls: ['./clinic-settings.component.css']\n})\nexport class ClinicSettingsComponent implements OnInit {\n\n  avatar:any;\n  doctor:Doctor;\n  clinic:Clinic;\n  clinicPhotos:Array<any>\n  specialities:string;\n  services:string;\n\n  uploadProgress:number;\n  uploadErrorMessage:string;\n  currentSelectedPhoto:any;\n  successMessage:string='';\n\n  constructor(private authService:AuthService, private doctorService:DoctorService) { }\n\n  ngOnInit(): void {\n    this.authService.getCurrentUser().subscribe(res => {\n      this.doctorService.getAvatar(res.id).subscribe(avatar => {\n        this.avatar = 'data:image/jpeg;base64,' + avatar?.image?.data;\n      });\n      this.doctorService.getById(res.id).subscribe(doctor => {\n        this.doctor = doctor;\n      });\n      this.doctorService.getClinic(res.id).subscribe(clinic => {\n        this.clinic = clinic;\n        console.log(\"Clinic : : \", JSON.stringify(this.clinic))\n        if (!!!this.clinic){\n          console.log(\"empty Clinic: \", JSON.stringify(this.clinic));\n          this.clinic = Clinic.empty();\n        }\n        this.services = this.clinic.services.join(', ');\n        this.specialities = this.clinic.specialities.join(', ');\n      });\n      this.doctorService.getClinicPhotos(res.id).subscribe(photos => {\n        photos = photos.filter((photo) => {\n          console.log(\"photo \", photo);\n          return photo !== null;\n        });\n        this.clinicPhotos = photos.map(photo => {\n          return {\n            \"id\": photo.id,\n            \"image\": 'data:image/jpeg;base64,' + photo.image.data\n          };\n        });\n      });\n    })\n  }\n\n  onSubmit(){\n    console.log(\"services: \", this.services.split(','));\n    console.log(\"services: \", this.specialities.split(','));\n    this.clinic.services = this.services.split(',');\n    this.clinic.specialities = this.specialities.split(',');\n    console.log(\"clinic new name: \", JSON.stringify(this.clinic));\n     this.doctorService.updateClinic(this.doctor.id, this.clinic).subscribe(clinic => {\n       this.clinic = clinic;\n       console.log(\"clinic: \", JSON.stringify(this.clinic))\n        this.successMessage = \"Change Saved\";\n        setTimeout(()=>{   \n          this.successMessage = '';\n     }, 3000);\n    });\n  }\n\n  deleteClinicPhoto(photoId:string){\n    console.log(\"Photo ID: \", photoId);\n    this.doctorService.deleteClinicPhoto(this.doctor.id, photoId).subscribe(res =>{\n      console.log(\"photo Deleted\", JSON.stringify(res));\n      this.doctorService.getClinicPhotos(this.doctor.id).subscribe(photos => {\n        console.log(JSON.stringify(photos));\n        // photos = photos.filter((photo, index, photos) => {\n        //   console.log(\"photo \", photo);\n        //   if(photo === null){\n        //     console.log(\"photo is null\");\n        //     photos = photos.slice(index, 1);\n        //   };\n        // });\n        photos = photos.filter((photo) => {\n          console.log(\"photo \", photo);\n          if(photo === null){\n            console.log(\"photo is null\");\n            return false;\n          };\n          return true;\n        });\n        console.log(\"photos after filter: \", JSON.stringify(photos));\n        this.clinicPhotos = photos.map(photo => {\n          console.log(\"photo : \", JSON.stringify(photo));\n          return {\n            \"id\": photo.id,\n            \"image\": 'data:image/jpeg;base64,' + photo.image.data\n          };\n        });\n      });\n    });\n  }\n\n\n  uploadClinicPhoto(event){\n    this.currentSelectedPhoto = event.target.files.item(0);\n    this.doctorService.uploadClinicPhoto(this.doctor.id,this.currentSelectedPhoto ).subscribe(\n      event => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.uploadProgress = Math.round(100 * event.loaded / event.total);\n        } else if (event instanceof HttpResponse) {\n          this.doctorService.getClinicPhotos(this.doctor.id).subscribe(photos => {\n            this.clinicPhotos = photos.map(photo => {\n              return {\n                \"id\": photo.id,\n                \"image\": 'data:image/jpeg;base64,' + photo.image.data\n              };\n            });\n            this.uploadProgress = 0;\n            this.currentSelectedPhoto = undefined;\n          });\n        }\n      },\n      err => {\n        this.uploadProgress = 0;\n        this.uploadErrorMessage = 'Could not upload the Photo!';\n        this.currentSelectedPhoto = undefined;\n      });\n  }\n\n  dragEnd(latitude:number, longitude:number){\n    console.log(\"latitude: \", latitude, \"longitude: \", longitude);\n    this.clinic.location.latitude = latitude;\n    this.clinic.location.longitude = longitude;\n    \n  }\n\n  zoomChange(zoom:number){\n    console.log(\"zoom: \", zoom);\n    this.clinic.location.zoom = zoom;\n    \n  }\n\n}\n","<div class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\n                <app-doctor-side-bar [avatar]=\"avatar\"></app-doctor-side-bar>\n            </div>\n            <div class=\"col-md-7 col-lg-8 col-xl-9\">\n                <!-- Clinic Info -->\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">Clinic Info</h4>\n                        <div class=\"row form-row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Clinic Name</label>\n                                    <input type=\"text\" class=\"form-control\" [ngModel]=\"clinic?.name\"\n                                        (ngModelChange)=\"clinic.name=$event\">\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Clinic Full Address</label>\n                                    <input [value]=\"clinic?.address\" type=\"text\" class=\"form-control\"\n                                        [ngModel]=\"clinic?.address\" (ngModelChange)=\"clinic.address=$event\">\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Country</label>\n                                    <input [value]=\"clinic?.country\" type=\"text\" class=\"form-control\"\n                                        [ngModel]=\"clinic?.country\" (ngModelChange)=\"clinic.country=$event\">\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>City</label>\n                                    <input [value]=\"clinic?.city\" [ngModel]=\"clinic?.city\"\n                                        (ngModelChange)=\"clinic.city=$event\" type=\"text\" class=\"form-control\">\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\">\n                                <div class=\"form-group\">\n                                    <label>Description</label>\n                                    <textarea [value]=\"clinic?.description\" [ngModel]=\"clinic?.description\"\n                                        (ngModelChange)=\"clinic.description=$event\" class=\"form-control\"\n                                        rows=\"5\"></textarea>\n                                </div>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <div class=\"form-group\">\n                                    <label>Min Price</label>\n                                    <input [value]=\"clinic?.minPrice\" [ngModel]=\"clinic?.minPrice\"\n                                        (ngModelChange)=\"clinic.minPrice=$event\" type=\"number\" class=\"form-control\">\n                                </div>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <div class=\"form-group\">\n                                    <label>Max Price</label>\n                                    <input [value]=\"clinic?.maxPrice\" [ngModel]=\"clinic?.maxPrice\"\n                                        (ngModelChange)=\"clinic.maxPrice=$event\" type=\"number\" class=\"form-control\">\n                                </div>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <div class=\"form-group\">\n                                    <label>Consulte Price</label>\n                                    <input [value]=\"clinic?.consultPrice\" [ngModel]=\"clinic?.consultPrice\"\n                                        (ngModelChange)=\"clinic.consultPrice=$event\" type=\"number\" class=\"form-control\">\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\">\n                                <div class=\"form-group\">\n                                    <label>Clinic Images</label>\n                                    <!-- <form action=\"#\" class=\"dropzone\"></form> -->\n                                    <div *ngIf=\"currentSelectedPhoto\" class=\"progress\">\n                                        <div class=\"progress-bar progress-bar-info progress-bar-striped\"\n                                            role=\"progressbar\" attr.aria-valuenow=\"{{ uploadProgress }}\"\n                                            aria-valuemin=\"0\" aria-valuemax=\"100\"\n                                            [ngStyle]=\"{ width: uploadProgress + '%' }\">\n                                            {{ uploadProgress }}%\n                                        </div>\n                                    </div>\n                                    <div class=\"upload-img\">\n                                        <div class=\"change-photo-btn\">\n                                            <span><i class=\"fa fa-upload\"></i> Upload Photo</span>\n                                            <input type=\"file\" class=\"upload\" (change)=\"uploadClinicPhoto($event)\">\n                                        </div>\n                                        <small class=\"form-text text-muted\">Allowed JPG, GIF or PNG. Max size of\n                                            2MB</small>\n                                    </div>\n                                    <!-- <input type=\"file\" class=\"upload\" (change)=\"uploadClinicPhoto($event)\" /> -->\n                                </div>\n                                <div class=\"upload-wrap\">\n                                    <div *ngFor=\"let clinicPhoto of clinicPhotos\" class=\"upload-images\">\n                                        <img [src]=\"clinicPhoto?.image\" alt=\"Upload Image\">\n                                        <a (click)=\"deleteClinicPhoto(clinicPhoto?.id)\"\n                                            class=\"btn btn-icon btn-danger btn-sm\"><i class=\"far fa-trash-alt\"></i></a>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-md-12 mt-5\">\n                                <div class=\"form-group\">\n                                    <label>Services</label>\n                                    <input [value]=\"services\" [ngModel]=\"services\" (ngModelChange)=\"services=$event\"\n                                        type=\"text\" class=\"form-control\">\n                                    <small class=\"form-text text-muted\">Note : Type , to enter to multiple\n                                        Services</small>\n                                </div>\n                            </div>\n                            <div class=\"col-md-12\">\n                                <div class=\"form-group\">\n                                    <label>Specialisation</label>\n                                    <input [value]=\"specialities\" [ngModel]=\"specialities\"\n                                        (ngModelChange)=\"specialities=$event\" type=\"text\" class=\"form-control\">\n                                    <small class=\"form-text text-muted\">Note : Type , to enter to multiple\n                                        Specializations</small>\n                                </div>\n                            </div>\n                            <div *ngIf=\"clinic?.location\" class=\"col-md-12\">\n                                <div class=\"form-group\">\n                                    <label>Clinic Location</label>\n                                    <agm-map [latitude]=\"clinic.location.latitude\"\n                                        [longitude]=\"clinic.location.longitude\" [zoom]=\"clinic.location.zoom\"\n                                        (zoomChange)=\"zoomChange($event)\">\n                                        <agm-marker [latitude]=\"clinic.location.latitude\"\n                                            [longitude]=\"clinic.location.longitude\" [markerDraggable]=\"true\"\n                                            (dragEnd)=\"dragEnd($event.coords.lat, $event.coords.lng)\">\n                                        </agm-marker>\n                                    </agm-map>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- /Clinic Info -->\n\n\n                <div class=\"submit-section submit-btn-bottom\">\n                    <button (click)=\"onSubmit()\" type=\"submit\" class=\"btn btn-primary submit-btn\">Save Changes</button>\n                </div>\n                <div *ngIf=\"successMessage\" class=\"alert alert-success\">\n                    <strong>Success!</strong> {{successMessage}}\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Appointment } from 'src/app/models/Appointment';\nimport { Patient } from 'src/app/models/Patient';\nimport { AppointmentService } from 'src/app/services/appointment.service';\nimport { PatientService } from 'src/app/services/patient.service';\n\n@Component({\n  selector: 'app-doctor-appointment',\n  templateUrl: './doctor-appointment.component.html',\n  styleUrls: ['./doctor-appointment.component.css']\n})\nexport class DoctorAppointmentComponent implements OnInit {\n\n  @Input() appointment:Appointment;\n  appointmentDate:Date;\n  patient:Patient;\n  avatar:any;\n  \n  constructor(\n    private appointmentService:AppointmentService,\n    private patientService:PatientService) { }\n\n  ngOnInit(): void {\n    this.appointmentDate = new Date(this.appointment.appointmentDate);\n    this.patientService.getById(this.appointment.patientId).subscribe(res => {\n      this.patient = res;\n    });\n    this.patientService.getAvatar(this.appointment.patientId).subscribe(avatar => {\n      this.avatar = 'data:image/jpeg;base64,' + avatar?.image?.data;\n    });\n  }\n\n  acceptAppointment(){\n    this.appointment.state = \"ACCEPTED\";\n    this.appointmentService.update(this.appointment).subscribe(res => {\n      this.appointment = res;\n    });\n  }\n\n  cancelAppointment(){\n    this.appointment.state = \"CANCELED\";\n    this.appointmentService.update(this.appointment).subscribe(res => {\n      this.appointment = res;\n    });\n  }\n\n  viewAppoitment(){\n    // navigate to appoitment page;\n  }\n}\n"," <!-- Appointment List -->\n <div class=\"appointment-list\">\n    <div class=\"profile-info-widget\">\n        <a routerLink=\"/patient/profile/{{patient.id}}\" class=\"booking-doc-img\">\n            <img [src]=\"avatar\" alt=\"Patient Image\">\n        </a>\n        <div class=\"profile-det-info\">\n            <h3><a routerLink=\"/patient/profile/{{patient.id}}\">{{patient.firstname | titlecase }} {{patient.lastname | titlecase }}</a></h3>\n            <div class=\"patient-details\">\n                <h5><i class=\"far fa-clock\"></i> {{appointmentDate | date:'full'}}</h5>\n                <!-- <h5><i class=\"fas fa-map-marker-alt\"></i> Newyork, United States</h5> -->\n                <h5 *ngIf=\"patient.email\"><i class=\"fas fa-envelope\"></i> {{patient.email}}</h5>\n                <h5 *ngIf=\"patient.phone\" class=\"mb-0\"><i class=\"fas fa-phone\"></i> {{patient.phone}}</h5>\n            </div>\n        </div>\n    </div>\n    <div class=\"appointment-action\">\n        <!-- <a (click)=\"viewAppointment()\" class=\"btn btn-sm bg-info-light\" data-toggle=\"modal\" data-target=\"#appt_details\">\n            <i class=\"far fa-eye\"></i> View\n        </a> -->\n        <a *ngIf=\"appointment.state == 'PENDING'\" (click)=\"acceptAppointment()\" class=\"btn btn-sm bg-success-light\">\n            <i class=\"fas fa-check\"></i> Accept\n        </a>\n        <a *ngIf=\"appointment.state == 'PENDING'\"  (click)=\"cancelAppointment()\" class=\"btn btn-sm bg-danger-light\">\n            <i class=\"fas fa-times\"></i> Cancel\n        </a>\n        <a *ngIf=\"appointment.state == 'ACCEPTED'\"  class=\"btn btn-sm bg-success-light\">\n            <i class=\"fas fa-times\"></i> {{appointment.state}}\n        </a>\n        <a *ngIf=\"appointment.state == 'CANCELED'\"  class=\"btn btn-sm  bg-danger-light\">\n            <i class=\"fas fa-times\"></i> {{appointment.state}}\n        </a>\n    </div>\n</div>\n<!-- /Appointment List -->\n","import { Component, OnInit } from '@angular/core';\nimport { Appointment } from 'src/app/models/Appointment';\nimport { Doctor } from 'src/app/models/Doctor';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { DoctorService } from 'src/app/services/doctor.service';\nimport { AppointmentService } from 'src/app/services/appointment.service';\n\n@Component({\n  selector: 'app-doctor-appointments',\n  templateUrl: './doctor-appointments.component.html',\n  styleUrls: ['./doctor-appointments.component.css']\n})\nexport class DoctorAppointmentsComponent implements OnInit {\n  avatar:any;\n  doctor:Doctor;\n  appointments:Appointment[];\n  constructor(\n    private autService:AuthService,\n    private doctorService:DoctorService,\n    private appotmentService:AppointmentService) { }\n\n  ngOnInit(): void {\n    this.autService.getCurrentUser().subscribe(user => {\n      this.doctorService.getById(user.id).subscribe(doctor => {\n        this.doctor = doctor;\n      });\n      this.doctorService.getAvatar(user.id).subscribe(avatar => {\n        this.avatar = 'data:image/jpeg;base64,' + avatar?.image?.data;\n      });\n      this.appotmentService.getAllDoctorAppoitments(user.id).subscribe(apps => {\n        this.appointments = apps;\n      })\n    });\n  }\n\n}\n","<!-- Breadcrumb -->\n<div class=\"breadcrumb-bar\">\n    <div class=\"container-fluid\">\n        <div class=\"row align-items-center\">\n            <div class=\"col-md-12 col-12\">\n                <nav aria-label=\"breadcrumb\" class=\"page-breadcrumb\">\n                    <ol class=\"breadcrumb\">\n                        <li class=\"breadcrumb-item\"><a routerLink=\"/home\">Home</a></li>\n                        <li class=\"breadcrumb-item active\" aria-current=\"page\">Appointments</li>\n                    </ol>\n                </nav>\n                <h2 class=\"breadcrumb-title\">Appointments</h2>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- /Breadcrumb -->\n\n<!-- Page Content -->\n<div class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\n                <app-doctor-side-bar [avatar]=\"avatar\"></app-doctor-side-bar>\n            </div>\n\n\n            <div class=\"col-md-7 col-lg-8 col-xl-9\">\n                <div class=\"appointments\">\n                    <app-doctor-appointment\n                    *ngFor=\"let appointment of appointments\" \n                    [appointment]=\"appointment\"></app-doctor-appointment>\n                    <div *ngIf=\"appointments.length === 0\" class=\"appointment-list\">\n                        <h6 >You Have No appointments</h6>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- Page Content -->","import { Component, OnInit } from '@angular/core';\nimport { DoctorService } from 'src/app/services/doctor.service';\nimport { Password } from 'src/app/models/Password';\nimport { Doctor } from 'src/app/models/Doctor';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-doctor-change-password',\n  templateUrl: './doctor-change-password.component.html',\n  styleUrls: ['./doctor-change-password.component.css']\n})\nexport class DoctorChangePasswordComponent implements OnInit {\n\n  isPasswordFailed = false;\n  isPasswordSuccess = false;\n  errorMessage = '';\n  successMessage = '';\n  passwordMatch:boolean = true;\n  form:any = {};\n  doctor:Doctor;\n  avatar:any;\n  constructor(\n    private doctorSerive:DoctorService,\n    private authService:AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.getCurrentUser().subscribe(user => {\n      this.doctorSerive.getById(user.id).subscribe(doc => {\n        this.doctor = doc;\n      });\n      this.doctorSerive.getAvatar(user.id).subscribe(avatar => {\n        this.avatar = 'data:image/jpeg;base64,' + avatar?.image?.data;\n      })\n    })\n  }\n\n  onSubmit(){\n    if (this.form.newPassword !== this.form.confirmPassword){\n      this.passwordMatch = false;\n      console.log(\"password does not match\");\n      return;\n    }\n    const password = new Password(this.form.oldPassword, this.form.newPassword);\n    this.doctorSerive.updatePassword(this.doctor.id, password).subscribe(message =>{\n      console.log(\"password success: \", JSON.stringify(message));\n      this.isPasswordSuccess = true;\n      this.successMessage = message.message;\n      setTimeout(() => this.successMessage = '', 2000);\n    }, err => {\n      this.isPasswordFailed = true;\n      console.log(\"password failed: \", JSON.stringify(err));\n      this.errorMessage = err.error.message;\n    });\n  }\n}\n","<div class=\"main-wrapper\">\n    <div class=\"breadcrumb-bar\">\n        <div class=\"container-fluid\">\n            <div class=\"row align-items-center\">\n                <div class=\"col-md-12 col-12\">\n                    <nav aria-label=\"breadcrumb\" class=\"page-breadcrumb\">\n                        <ol class=\"breadcrumb\">\n                            <li class=\"breadcrumb-item\"><a href=\"#\">Patient</a></li>\n                            <li class=\"breadcrumb-item active\" aria-current=\"page\">editPassword</li>\n                        </ol>\n                    </nav>\n                    <h2 class=\"breadcrumb-title\">Change Password</h2>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"content\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n\n                <!-- Profile Sidebar -->\n                <div class=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\n                    <app-doctor-side-bar [avatar]=\"avatar\"></app-doctor-side-bar>\n                </div>\n\n\n                <div class=\"col-md-7 col-lg-8 col-xl-9\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <div class=\"row\">\n                                <div class=\"col-md-12 col-lg-6\">\n                                    <form  name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\n                                        <input type=\"password\" class=\"form-control floating\" name=\"oldPassword\"\n                                            [(ngModel)]=\"form.oldPassword\" required minlength=\"8\" maxlength=\"20\"\n                                            #oldPassword=\"ngModel\">\n                                        <label class=\"focus-label\">Old Password</label>\n                                        <div class=\"alert-danger\" *ngIf=\"f.submitted && oldPassword.invalid\">\n                                            <div *ngIf=\"oldPassword.errors.required\">Password is required</div>\n                                            <div *ngIf=\"oldPassword.errors.minlength\">\n                                                Password must be at least 8 characters\n                                            </div>\n                                            <div *ngIf=\"oldPassword.errors.maxlength\">\n                                                Password must be at most 20 characters\n                                            </div>\n                                        </div>\n                                        <input type=\"password\" class=\"form-control floating\" name=\"newPassword\"\n                                            [(ngModel)]=\"form.newPassword\" required minlength=\"8\" maxlength=\"20\"\n                                            #newPassword=\"ngModel\">\n                                        <label class=\"focus-label\">New Password</label>\n                                        <div class=\"alert-danger\" *ngIf=\"f.submitted && newPassword.invalid\">\n                                            <div *ngIf=\"newPassword.errors.required  && !successMessage\">Password is required</div>\n                                            <div *ngIf=\"newPassword.errors.minlength\">\n                                                Password must be at least 8 characters\n                                            </div>\n                                            <div *ngIf=\"newPassword.errors.maxlength\">\n                                                Password must be at most 20 characters\n                                            </div>\n                                        </div>\n                                        <input type=\"password\" class=\"form-control floating\" name=\"confirmPassword\"\n                                            [(ngModel)]=\"form.confirmPassword\" required minlength=\"8\" maxlength=\"20\"\n                                            #confirmPassword=\"ngModel\">\n                                        <label class=\"focus-label\">Confirm New Password</label>\n                                        <div class=\"alert-danger\" *ngIf=\"f.submitted && confirmPassword.invalid\">\n                                            <div *ngIf=\"confirmPassword.errors.required && !successMessage\">Password is required</div>\n                                            <div *ngIf=\"confirmPassword.errors.minlength\">\n                                                Password must be at least 8 characters\n                                            </div>\n                                            <div *ngIf=\"confirmPassword.errors.maxlength\">\n                                                Password must be at most 20 characters\n                                            </div>\n                                            \n                                        </div>\n                                        <div class=\"alert alert-danger\"  *ngIf=\"!passwordMatch\">\n                                            new Password and Confirm Password must match\n                                        </div>\n                                        <div class=\"alert alert-danger\" *ngIf=\"f.submitted && isPasswordFailed\">\n                                            Password failed!<br />{{ errorMessage }}\n                                        </div>\n                                        <div class=\"alert alert-success\" *ngIf=\"f.submitted && successMessage \">\n                                            <br/>\n                                            <b>Success</b>{{ successMessage }}\n                                        </div>\n                                        <div class=\"submit-section\">\n                                            <button type=\"submit\" class=\"btn btn-primary submit-btn\">Submit</button>\n                                        </div>\n                                    </form>\n                                    <!-- /Change Password Form -->\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-doctor-dash-board',\n  templateUrl: './doctor-dash-board.component.html',\n  styleUrls: ['./doctor-dash-board.component.css']\n})\nexport class DoctorDashBoardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>doctor-dash-board works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Doctor } from 'src/app/models/Doctor';\nimport { DoctorService } from 'src/app/services/doctor.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-doctor-profile-settings',\n  templateUrl: './doctor-profile-settings.component.html',\n  styleUrls: ['./doctor-profile-settings.component.css']\n})\nexport class DoctorProfileSettingsComponent implements OnInit {\n\n  doctor:Doctor;\n  avatar:any;\n  currentSelectedAvatar:any;\n  uploadProgress:number;\n  uploadErrorMessage:string;\n\n  constructor(\n    private doctorService:DoctorService,\n    private authService:AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.getCurrentUser().subscribe(res => {\n      this.doctorService.getById(res.id).subscribe(doc => {\n        this.doctor = doc;\n      });\n      this.doctorService.getAvatar(res.id).subscribe(avatar => {\n        this.avatar = 'data:image/jpeg;base64,' + avatar?.image?.data;\n      })\n    })\n  }\n\n  \n  onSubmit(){\n    console.log(\"clinic new name: \", JSON.stringify(this.doctor));\n     this.doctorService.updateDoctor(this.doctor).subscribe(doc => {\n       this.doctor = doc;\n       window.location.reload();\n    });\n  }\n\n\n  uploadAvatar(event){\n    this.currentSelectedAvatar = event.target.files.item(0);\n    this.doctorService.uploadAvatar(this.doctor.id,this.currentSelectedAvatar ).subscribe(\n      event => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.uploadProgress = Math.round(100 * event.loaded / event.total);\n        } else if (event instanceof HttpResponse) {\n          this.doctorService.getAvatar(this.doctor.id).subscribe(avatar => {\n            this.avatar = 'data:image/jpeg;base64,' + avatar.image.data\n            this.uploadProgress = 0;\n            this.currentSelectedAvatar = undefined;\n          });\n        }\n      },\n      err => {\n        this.uploadProgress = 0;\n        this.uploadErrorMessage = 'Could not upload the Photo!';\n        this.currentSelectedAvatar = undefined;\n      });\n  }\n}\n","<div class=\"content\">\n    <div class=\"container-fluid\">\n        <div *ngIf=\"doctor\" class=\"row\">\n            <div class=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\n               \n                <app-doctor-side-bar [avatar]=\"avatar\" ></app-doctor-side-bar>\n            </div>\n            <div class=\"col-md-7 col-lg-8 col-xl-9\">\n                <!-- Basic Information -->\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">Basic Information</h4>\n                        <div class=\"row form-row\">\n                            <div class=\"col-md-12\">\n                                <div class=\"form-group\">\n                                    <div class=\"change-avatar\">\n                                        <div class=\"profile-img\">\n                                            <!-- <img [src]=\"avatar\" alt=\"Doctor Image\"> -->\n                                            <img *ngIf=\"avatar.length > 100\" [src]=\"avatar\" alt=\"Doctor Image\">\n                                            <img *ngIf=\"avatar.length < 100\" src=\"assets/img/doctors/default-doctor.png\"  alt=\"Doctor Image\">\n                                        </div>\n                                        <div class=\"upload-img\">\n                                            <div *ngIf=\"currentSelectedAvatar\" class=\"progress\">\n                                                <div class=\"progress-bar progress-bar-info progress-bar-striped\"\n                                                    role=\"progressbar\" attr.aria-valuenow=\"{{ uploadProgress }}\"\n                                                    aria-valuemin=\"0\" aria-valuemax=\"100\"\n                                                    [ngStyle]=\"{ width: uploadProgress + '%' }\">\n                                                    {{ uploadProgress }}%\n                                                </div>\n                                            </div>\n                                            <div class=\"change-photo-btn\">\n                                                <span><i class=\"fa fa-upload\"></i> Upload Photo</span>\n                                                <input type=\"file\" class=\"upload\" (change)=\"uploadAvatar($event)\">\n                                            </div>\n                                            <small class=\"form-text text-muted\">Allowed JPG, GIF or PNG. Max size of\n                                                2MB</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Username <span class=\"text-danger\">*</span></label>\n                                    <input [value]=\"doctor.username\" type=\"text\" class=\"form-control\" readonly>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Email <span class=\"text-danger\">*</span></label>\n                                    <input [value]=\"doctor.email\" type=\"email\" class=\"form-control\" readonly>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>First Name <span class=\"text-danger\">*</span></label>\n                                    <input [value]=\"doctor.firstname\" [(ngModel)]=\"doctor.firstname\" type=\"text\" class=\"form-control\">\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Last Name <span class=\"text-danger\">*</span></label>\n                                    <input [value]=\"doctor.lastname\" [(ngModel)]=\"doctor.lastname\" type=\"text\" class=\"form-control\">\n                                </div>\n                            </div>\n                            <!-- <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Phone Number</label>\n                                    <input type=\"text\" class=\"form-control\">\n                                </div>\n                            </div> -->\n                            <!-- <div class=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <label>Gender</label>\n                                    <select class=\"form-control select\">\n                                        <option>Select</option>\n                                        <option>Male</option>\n                                        <option>Female</option>\n                                    </select>\n                                </div>\n                            </div> -->\n                            <!-- <div class=\"col-md-6\">\n                                <div class=\"form-group mb-0\">\n                                    <label>Date of Birth</label>\n                                    <input type=\"text\" class=\"form-control\">\n                                </div>\n                            </div> -->\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group mb-0\">\n                                    <label>Speciality</label>\n                                    <input [value]=\"doctor.speciality\" [(ngModel)]=\"doctor.speciality\" type=\"text\" class=\"form-control\">\n                                </div>\n                            </div> \n                        </div>\n                    </div>\n                </div>\n                <!-- /Basic Information -->\n\n                <!-- About Me -->\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">About Me</h4>\n                        <div class=\"form-group mb-0\">\n                            <label>Biography</label>\n                            <textarea [value]=\"doctor.aboutMe\" [(ngModel)]=\"doctor.aboutMe\" class=\"form-control\" rows=\"5\"></textarea>\n                        </div>\n                    </div>\n                </div>\n                <!-- /About Me -->\n\n                <div class=\"submit-section submit-btn-bottom\">\n                    <button (click)=\"onSubmit()\" type=\"submit\" class=\"btn btn-primary submit-btn\">Save Changes</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Review } from 'src/app/models/Review';\nimport { Patient } from 'src/app/models/Patient';\nimport { PatientService } from 'src/app/services/patient.service';\n\n@Component({\n  selector: 'app-doctor-review',\n  templateUrl: './doctor-review.component.html',\n  styleUrls: ['./doctor-review.component.css']\n})\nexport class DoctorReviewComponent implements OnInit {\n\n  @Input() review:Review;\n  patient:Patient;\n  patientAvatar:any;\n  constructor(private patientService:PatientService) { }\n\n  ngOnInit(): void {\n    this.patientService.getById(this.review.patientId).subscribe(patient => {\n      this.patient = patient;\n    });\n    this.patientService.getAvatar(this.review.patientId).subscribe(avatar => {\n      this.patientAvatar = 'data:image/jpeg;base64,' + avatar.image.data;\n    })\n  }\n\n}\n","<li style=\"list-style: none;\">\n    <div class=\"comment\">\n        <!-- <img class=\"avatar avatar-sm rounded-circle\" alt=\"Patient Image\" [src]=\"patientAvatar\"> -->\n        <div class=\"comment-body\">\n            <div class=\"row pl-2\">\n                <div class=\"col-4\">\n                    <div class=\"row\">\n                        <img class=\"avatar avatar-sm rounded-circle\" alt=\"Patient Image\" [src]=\"patientAvatar\">\n                    </div>\n\n                    <div class=\"row mt-2\">\n                        <div class=\"meta-data\">\n                            <div class=\"row\">\n                                <span *ngIf=\"patient\" class=\"comment-author\">{{patient.firstname | titlecase}} {{patient.lastname | titlecase}}</span>\n                            </div>\n                            \n                            <div class=\"row mt-2\">\n                                <app-rating-star [ratedCount]=\"review?.rating\" [readonly]=\"true\"></app-rating-star>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-8\">\n                    <p class=\"comment-content\">\n                        {{review?.content}}\n                    </p>\n                </div>\n            </div>\n            \n            \n        </div>\n    </div>\n</li>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { DoctorService } from 'src/app/services/doctor.service';\nimport { Review } from 'src/app/models/Review';\nimport { ReviewService } from 'src/app/services/review.service';\nimport { Doctor } from 'src/app/models/Doctor';\n\n@Component({\n  selector: 'app-doctor-reviews',\n  templateUrl: './doctor-reviews.component.html',\n  styleUrls: ['./doctor-reviews.component.css']\n})\nexport class DoctorReviewsComponent implements OnInit {\n\n  avatar:any;\n  doctor:Doctor;\n  reviews:Review[]\n  constructor(\n    private authService:AuthService,\n    private reviewService:ReviewService,\n    private doctorService:DoctorService\n  ) {\n    this.authService.getCurrentUser().subscribe(user => {\n      console.log(\"user \", JSON.stringify(user));\n      this.doctorService.getById(user.id).subscribe(doc => {\n        this.doctor = doc;\n      })\n      this.doctorService.getAvatar(user.id).subscribe(avatar => {\n        this.avatar = 'data:image/jpeg;base64,' + avatar?.image?.data;\n      });\n      this.reviewService.getReviews(user.id).subscribe(reviews => {\n        this.reviews = reviews;\n      });\n    });\n   }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<div class=\"main-wrapper\">\n    <div class=\"breadcrumb-bar\">\n        <div class=\"container-fluid\">\n            <div class=\"row align-items-center\">\n                <div class=\"col-md-12 col-12\">\n                    <nav aria-label=\"breadcrumb\" class=\"page-breadcrumb\">\n                        <ol class=\"breadcrumb\">\n                            <li class=\"breadcrumb-item\"><a href=\"#\">Patient</a></li>\n                            <li class=\"breadcrumb-item active\" aria-current=\"page\">editPassword</li>\n                        </ol>\n                    </nav>\n                    <h2 class=\"breadcrumb-title\">Change Password</h2>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"content\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <!-- Profile Sidebar -->\n                <div class=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\n                    <app-doctor-side-bar [avatar]=\"avatar\"></app-doctor-side-bar>\n                </div>\n                <div class=\"col-md-7 col-lg-8 col-xl-9\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <div class=\"row\">\n                                <div class=\"col-md-12\">\n                                    <!-- <div class=\"widget review-listing\">\n                                        \n                                        \n                                        </ul>\n                                    </div> -->\n                                    <ul class=\"comments-list\">\n                                        <app-doctor-review *ngFor=\"let review of reviews\" [review]=\"review\">\n                                        </app-doctor-review>\n                                        <li style=\"list-style: none\" *ngIf=\"reviews.length === 0\" class=\"appointments\">\n                                            <h6>You Have No Reviews</h6>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Doctor } from 'src/app/models/Doctor';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { DoctorService } from 'src/app/services/doctor.service';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-doctor-side-bar',\n  templateUrl: './doctor-side-bar.component.html',\n  styleUrls: ['./doctor-side-bar.component.css']\n})\nexport class DoctorSideBarComponent implements OnInit {\n\n  @Input() avatar: any;\n  // @Input() doctor:Doctor;\n  showDefaultAvatar: boolean = false;\n  doctor: Doctor;\n  // avatar:any;\n  constructor(private authService: AuthService,\n    private doctorService: DoctorService,\n    private tokenStorageService: TokenStorageService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.getCurrentUser().subscribe(user => {\n      this.doctorService.getById(user.id).subscribe(doc => {\n        this.doctor = doc;\n        console.log(\"print avatar : \", this.avatar);\n        // if (!this.avatar) {\n        //   this.showDefaultAvatar = true;\n        //   console.log(\"show default\");\n        // } else {\n        //   this.showDefaultAvatar = false;\n        // }\n      });\n      \n      // this.doctorService.getAvatar(user.id).subscribe(avatar => {\n      //   this.avatar = 'data:image/jpeg;base64,' + avatar?.image?.data;\n      // // });\n      // if (!this.avatar) {\n      //   this.showDefaultAvatar = true;\n      //   console.log(\"show default\");\n      // } else {\n      //   this.showDefaultAvatar = false;\n      // }\n\n    })\n  }\n\n  logout() {\n    this.tokenStorageService.signOut();\n    //window.location.reload();\n    this.router.navigate([\"home\"]).then(() => {\n      window.location.reload();\n    });\n  }\n\n\n}\n","<!-- Profile Sidebar -->\n<div class=\"profile-sidebar\">\n    <div class=\"widget-profile pro-widget-content\">\n        <div class=\"profile-info-widget\">\n            <a href=\"#\" class=\"booking-doc-img\">\n                <img *ngIf=\"avatar.length > 100\" [src]=\"avatar\" alt=\"Doctor Image\">\n                <img *ngIf=\"avatar.length < 100\" src=\"assets/img/doctors/default-doctor.png\"  alt=\"Doctor Image\">\n            </a>\n            <div class=\"profile-det-info\">\n                <h3>Dr. {{doctor?.firstname | titlecase}} {{doctor?.lastname | titlecase }}</h3>\n\n                <div class=\"patient-details\">\n                    <h5 class=\"mb-0\">{{doctor?.speciality | titlecase }}</h5>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"dashboard-widget\">\n        <nav class=\"dashboard-menu\">\n            <ul>\n                <!-- <li routerLinkActive=\"active\">\n                    <a routerLink=\"/doctor/dashboard\">\n                        <i class=\"fas fa-columns\"></i>\n                        <span>Dashboard</span>\n                    </a>\n                </li> -->\n                <li  routerLinkActive=\"active\">\n                    <a routerLink=\"/doctor/appointments\">\n                        <i class=\"fas fa-calendar-check\"></i>\n                        <span>Appointments</span>\n                    </a>\n                </li>\n                <!-- <li routerLinkActive=\"active\">\n                    <a routerLink=\"/doctor/patients\">\n                        <i class=\"fas fa-user-injured\"></i>\n                        <span>My Patients</span>\n                    </a>\n                </li> -->\n                <li routerLinkActive=\"active\">\n                    <a routerLink=\"/doctor/reviews\">\n                        <i class=\"fas fa-star\"></i>\n                        <span>Reviews</span>\n                    </a>\n                </li>\n\n                <li routerLinkActive=\"active\">\n                    <a routerLink=\"/doctor/profile-settings\">\n                        <i class=\"fas fa-user-cog\"></i>\n                        <span>Profile Settings</span>\n                    </a>\n                </li>\n\n                <li routerLinkActive=\"active\">\n                    <a routerLink=\"/doctor/clinic-settings\">\n                        <i class=\"fas fa-user-cog\"></i>\n                        <span>Clinic Settings</span>\n                    </a>\n                </li>\n\n                <li routerLinkActive=\"active\">\n                    <a routerLink=\"/doctor/change-password\">\n                        <i class=\"fas fa-lock\"></i>\n                        <span>Change Password</span>\n                    </a>\n                </li>\n                <li (click)=\"logout()\">\n                    <a href=\"#\">\n                        <i class=\"fas fa-sign-out-alt\"></i>\n                        <span>Logout</span>\n                    </a>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>\n<!-- /Profile Sidebar -->\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../../services/auth.service'\nimport { TokenStorageService } from '../../../../services/token-storage.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/models/User';\n\n\n@Component({\n  selector: 'app-doctor-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n  retUrl:string = \"doctor/profile\";\n\n  constructor(\n    private authService: AuthService,\n    private tokenStorage: TokenStorageService,\n    private router:Router,\n    private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n    this.activatedRoute.queryParamMap\n                .subscribe(params => {\n            this.retUrl = params.get('retUrl'); \n            console.log( 'LoginComponent/ngOnInit '+ this.retUrl);\n        });\n  }\n\n  onSubmit() {\n    this.authService.doctorLogin(this.form).subscribe(\n      (user:User) => {\n        this.tokenStorage.saveToken(user.accessToken);\n        this.tokenStorage.saveUser(user);\n        this.tokenStorage.saveUserType(user.userType);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.authService.getLoggedInUser.emit(user);\n        console.log(\"login successful\");\n        console.log(this.tokenStorage.getUser());\n        console.log( 'return to '+ this.retUrl);\n           if (this.retUrl!=null) {\n                this.router.navigate( [this.retUrl]);\n           } else {\n                this.router.navigate( ['doctor/appointments']);\n           }\n           \n        \n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  \n}","<div class=\"content \">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n\n                <!-- Login Tab Content -->\n                <div class=\"account-content\">\n                    <div class=\"row align-items-center justify-content-center\">\n                        <div class=\"col-md-7 col-lg-6 login-left\">\n                            <img src=\"assets/img/login-banner.png\" class=\"img-fluid\" alt=\"Doccure Login\">\n                        </div>\n                        <div class=\"col-md-12 col-lg-6 login-right\">\n                            <div class=\"login-header\">\n                                <h3>Login <span>AirDoc</span></h3>\n                            </div>\n                            <form *ngIf=\"!isLoggedIn\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\"\n                                novalidate>\n                                <div class=\"form-group\">\n                                    <div\n                                      class=\"alert alert-danger\"\n                                      role=\"alert\"\n                                      *ngIf=\"f.submitted && isLoginFailed\"\n                                    >\n                                      Login failed: {{ errorMessage }}\n                                    </div>\n                                  </div>\n                                <div class=\"form-group form-focus\">\n                                    <input class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\" required\n                                        #email=\"ngModel\" type=\"email\" class=\"form-control floating\">\n                                    <label class=\"focus-label\">Email</label>\n                                    \n                                    </div>\n                                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && email.invalid\"> Email is required!</div>\n                                    <div class=\"form-group form-focus\">\n                                        <input name=\"password\" [(ngModel)]=\"form.password\" required minlength=\"6\"\n                                            #password=\"ngModel\" type=\"password\" class=\"form-control floating\">\n                                        <label class=\"focus-label\">Password</label>\n                                        \n                                    </div>\n                                    <div class=\"alert alert-danger\" role=\"alert\"\n                                            *ngIf=\"f.submitted && password.invalid\">\n                                            <div *ngIf=\"password.errors.required\">Password is required</div>\n                                            <div *ngIf=\"password.errors.minlength\">\n                                                Password must be at least 6 characters\n                                            </div>\n                                        </div>\n                                    <div class=\"text-right\">\n                                        <a class=\"forgot-link\" routerLink=\"/doctor/forgot-password\">Forgot Password ?</a>\n                                    </div>\n                                    <button class=\"btn btn-primary btn-block btn-lg login-btn\"\n                                        type=\"submit\">Login</button>\n                                    <div class=\"text-center dont-have\">Don’t have an account? <a\n                                            routerLink=\"/doctor/signup\">Register</a></div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <!-- /Login Tab Content -->\n\n            </div>\n        </div>\n\n    </div>\n\n</div>\n<!-- /Page Content -->","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Doctor } from 'src/app/models/Doctor';\nimport { DoctorService } from 'src/app/services/doctor.service';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { Clinic } from 'src/app/models/Clinic';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  doctor:Doctor;\n  clinic:Clinic;\n  avatar:any;\n  showDefaultAvatar:boolean = false;\n  clinicPhotos:Array<any>\n  id:string = \"\";\n  isPatient:boolean=false;\n  constructor(private route:ActivatedRoute,\n    private doctorService:DoctorService, \n    private tokenStorage:TokenStorageService) { }\n\n  ngOnInit(){\n    this.route.params\n  .subscribe(\n    (params: Params) => {\n      this.id = params['id'];\n      console.log(\"Doctor id\" + this.id);\n      //Get Doctor\n      this.doctorService.getById(this.id).subscribe(res => {\n        this.doctor = res;\n        console.log(\"rating: \", this.doctor.rating);\n      });\n      this.doctorService.getAvatar(this.id).subscribe(res => {\n        this.avatar = 'data:image/jpeg;base64,' + res?.image?.data;\n        console.log(\"print avatar : \", this.avatar);\n        if (res?.image?.data === undefined){\n          this.showDefaultAvatar = true;\n          console.log(\"show default\");\n          \n        }\n      });\n      this.doctorService.getClinic(this.id).subscribe(res => {\n        this.clinic = res;\n        console.log(\"clinic from Profile\", this.clinic);\n      });\n      this.doctorService.getClinicPhotos(this.id).subscribe(res => {\n        //Convert image to base64 and return it;\n        this.clinicPhotos = res.map(photo => 'data:image/jpeg;base64,' + photo.image.data);\n      });\n      this.isPatient = this.tokenStorage.getUserType() == \"PATIENT\";\n      \n      \n    }\n  );\n  }\n\n  refresh(){\n    this.doctorService.getById(this.doctor.id).subscribe(res => {\n      this.doctor = res;\n    })\n  }\n\n  \n}\n","<div class=\"content\">\n\t<div class=\"container\">\n\t\t<!-- Doctor Widget -->\n\t\t<div class=\"card\">\n\t\t\t<div class=\"card-body\">\n\t\t\t\t<div class=\"doctor-widget\">\n\t\t\t\t\t<div class=\"doc-info-left\">\n\t\t\t\t\t\t<div class=\"doctor-img\">\n\t\t\t\t\t\t\t<!-- <img [src]=\"avatar\" class=\"img-fluid\" alt=\"Doctor Image\"> -->\n\t\t\t\t\t\t\t<img *ngIf=\"!showDefaultAvatar\" [src]=\"avatar\" class=\"img-fluid\" alt=\"Doctor Image\">\n                \t\t\t<img *ngIf=\"showDefaultAvatar\" src=\"assets/img/doctors/default-doctor.png\" class=\"img-fluid\" alt=\"Doctor Image\">\n            \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"doc-info-cont\">\n\t\t\t\t\t\t\t<h4 class=\"doc-name\">Dr. {{doctor?.firstname | titlecase}} {{doctor?.lastname | titlecase}}\n\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t<p class=\"doc-speciality\">{{doctor?.speciality | titlecase}}</p>\n\t\t\t\t\t\t\t<div *ngIf=\"doctor?.rating\" class=\"rating\">\n\t\t\t\t\t\t\t\t<app-rating-star [ratedCount]=\"doctor.rating\" ></app-rating-star>\n\t\t\t\t\t\t\t\t<span class=\"d-inline-block average-rating\">({{doctor?.averageRating}})</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"clinic-details\">\n\t\t\t\t\t\t\t\t<p class=\"doc-location\"><i class=\"fas fa-map-marker-alt\"></i>\n\t\t\t\t\t\t\t\t\t{{clinic?.city | titlecase}}, {{clinic?.country | titlecase}} </p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"clinic-services\">\n\t\t\t\t\t\t\t\t<span *ngFor=\"let service of clinic?.services\">{{service}}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"doc-info-right\">\n\t\t\t\t\t\t<div class=\"clini-infos\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li><i class=\"far fa-comment\"></i> {{doctor?.averageRating}} Feedback</li>\n\t\t\t\t\t\t\t\t<li><i class=\"fas fa-map-marker-alt\"></i> {{clinic?.city | titlecase}},\n\t\t\t\t\t\t\t\t\t{{clinic?.country | titlecase}}</li>\n\t\t\t\t\t\t\t\t<li><i class=\"far fa-money-bill-alt\"></i> {{clinic?.maxPrice | currency}} per hour\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"clinic-booking\">\n\t\t\t\t\t\t\t<a class=\"apt-btn\" routerLink=\"/booking/{{doctor?.id}}\">Book Appointment</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<!-- /Doctor Widget -->\n\n\n\t\t<!-- Doctor Details Tab -->\n\t\t<div class=\"card\">\n\n\n\t\t\t<div class=\"card-body pt-0\">\n\n\t\t\t\t<!-- Tab Menu -->\n\t\t\t\t<nav class=\"user-tabs mb-4\">\n\n\t\t\t\t\t<ul class=\"nav nav-tabs nav-tabs-bottom nav-justified\">\n\t\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t\t<a class=\"nav-link active\" href=\"#doc_overview\" data-toggle=\"tab\">Overview</a>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t\t<a class=\"nav-link\" href=\"#doc_clinic\" data-toggle=\"tab\">Clinic</a>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t\t<a class=\"nav-link\" href=\"#doc_reviews\" data-toggle=\"tab\">Reviews</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\n\t\t\t\t</nav>\n\t\t\t\t<!-- /Tab Menu -->\n\n\n\t\t\t\t<!-- Tab Content -->\n\t\t\t\t<div class=\"tab-content pt-0\">\n\t\t\t\t\t<!-- Overview Content -->\n\t\t\t\t\t<div role=\"tabpanel\" id=\"doc_overview\" class=\"tab-pane fade show active\">\n\t\t\t\t\t\t<app-over-view [doctor]=\"doctor\" [clinic]=\"clinic\"></app-over-view>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!-- /Overview Content -->\n\n\t\t\t\t\t<!-- Locations Content -->\n\t\t\t\t\t<div role=\"tabpanel\" id=\"doc_clinic\" class=\"tab-pane fade\">\n\t\t\t\t\t\t<!-- Location List -->\n\t\t\t\t\t\t<div class=\"location-list\">\n\t\t\t\t\t\t\t<app-clinic *ngIf=\"clinic\" [clinic]=\"clinic\" [doctor]=\"doctor\" ></app-clinic>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!-- /Location List -->\n\t\t\t\t\t</div>\n\t\t\t\t\t<!-- /Locations Content -->\n\n\t\t\t\t\t<!-- Reviews Content -->\n                    <div role=\"tabpanel\" id=\"doc_reviews\" class=\"tab-pane fade\">\n\t\t\t\t\t\t<app-reviews (refresh)=\"refresh()\"  *ngIf=\"doctor\" [doctor]=\"doctor\" [isPatient]=\"isPatient\"></app-reviews>\n\t\t\t\t\t</div>\n                    <!-- /Reviews Content -->\n\n\n\t\t\t\t</div>\n\t\t\t\t<!-- /Tab Content -->\n\t\t\t</div>\n\n\n\t\t</div>\n\t\t<!-- /Doctor Details Tab -->\n\n\n\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-doctor-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  form: any = {};\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private router:Router, private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.authService.doctorRegister(this.form).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n        this.router.navigate([\"doctor/login\"]);\n        \n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n","<div class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n\n                <!-- Account Content -->\n                <div class=\"account-content\">\n                    <div class=\"row align-items-center justify-content-center\">\n                        <div class=\"col-md-7 col-lg-6 login-left\">\n                            <img src=\"assets/img/login-banner.png\" class=\"img-fluid\" alt=\"Login Banner\">\n                        </div>\n                        <div class=\"col-md-12 col-lg-6 login-right\">\n                            <div class=\"login-header\">\n                                <h3>Doctor Register <a routerLink=\"patient/signup\">Not a Doctor?</a></h3>\n                            </div>\n\n                            <!-- Register Form -->\n                            <form *ngIf=\"!isSuccessful\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\"\n                                novalidate>\n                                \n                                <div class=\"form-group form-focus\">\n                                    <input type=\"text\" class=\"form-control floating\" name=\"firstname\"\n                                        [(ngModel)]=\"form.firstname\" required minlength=\"3\" maxlength=\"20\"\n                                        #firstname=\"ngModel\">\n                                    <label class=\"focus-label\">First Name</label>\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && firstname.invalid\">\n                                        <div *ngIf=\"firstname.errors.required\">First Name is required</div>\n                                        <div *ngIf=\"firstname.errors.minlength\">\n                                            First Name must be at least 3 characters\n                                        </div>\n                                        <div *ngIf=\"firstname.errors.maxlength\">\n                                            First Name must be at most 20 characters\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group form-focus\">\n                                    <input type=\"text\" class=\"form-control floating\" name=\"lastname\"\n                                        [(ngModel)]=\"form.lastname\" required minlength=\"3\" maxlength=\"20\"\n                                        #lastname=\"ngModel\">\n                                    <label class=\"focus-label\">Last Name</label>\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && lastname.invalid\">\n                                        <div *ngIf=\"lastname.errors.required\">Last Name is required</div>\n                                        <div *ngIf=\"lastname.errors.minlength\">\n                                            Last Name must be at least 3 characters\n                                        </div>\n                                        <div *ngIf=\"username.errors.maxlength\">\n                                            Last Name must be at most 20 characters\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group form-focus\">\n                                    <input type=\"text\" class=\"form-control floating\" name=\"username\"\n                                        [(ngModel)]=\"form.username\" required minlength=\"3\" maxlength=\"20\"\n                                        #username=\"ngModel\">\n                                    <label class=\"focus-label\">Username</label>\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && username.invalid\">\n                                        <div *ngIf=\"username.errors.required\">Username is required</div>\n                                        <div *ngIf=\"username.errors.minlength\">\n                                            Username must be at least 3 characters\n                                        </div>\n                                        <div *ngIf=\"username.errors.maxlength\">\n                                            Username must be at most 20 characters\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group form-focus\">\n                                    <input type=\"tel\" class=\"form-control floating\" name=\"phone\"\n                                    [(ngModel)]=\"form.phone\" required minlength=\"8\" maxlength=\"20\"\n                                    #phone=\"ngModel\">\n                                    <label class=\"focus-label\">Phone Number</label>\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && phone.invalid\">\n                                        <div *ngIf=\"phone.errors.required\">Phone Number is required</div>\n                                        <div *ngIf=\"phone.errors.minlength\">\n                                            Phone Number must be at least 8 characters\n                                        </div>\n                                        <div *ngIf=\"phone.errors.maxlength\">\n                                            Phone Number must be at most 20 characters\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group form-focus\">\n                                    <input type=\"email\" class=\"form-control floating\" name=\"email\"\n                                        [(ngModel)]=\"form.email\" required minlength=\"10\" maxlength=\"50\"\n                                        #email=\"ngModel\">\n                                    <label class=\"focus-label\">Email</label>\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\n                                        <div *ngIf=\"email.errors.required\">Email is required</div>\n                                        <div *ngIf=\"email.errors.minlength\">\n                                            Email must be at least 10 characters\n                                        </div>\n                                        <div *ngIf=\"email.errors.maxlength\">\n                                            Email must be at most 50 characters\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group form-focus\">\n                                    <input type=\"password\" class=\"form-control floating\" name=\"password\"\n                                    [(ngModel)]=\"form.password\" required minlength=\"8\" maxlength=\"20\"\n                                    #password=\"ngModel\">\n                                    <label class=\"focus-label\">Create Password</label>\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\n                                        <div *ngIf=\"password.errors.required\">Password is required</div>\n                                        <div *ngIf=\"password.errors.minlength\">\n                                            Password must be at least 8 characters\n                                        </div>\n                                        <div *ngIf=\"password.errors.maxlength\">\n                                            Password must be at most 20 characters\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"text-right\">\n                                    <a class=\"forgot-link\" routerLink=\"/doctor/login\">Already have an account?</a>\n                                </div>\n                                <button class=\"btn btn-primary btn-block btn-lg login-btn\" type=\"submit\">Signup</button>\n                                <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n                                    Signup failed!<br />{{ errorMessage }}\n                                </div>\n                            </form>\n                            <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n                                Your registration is successful!\n                              </div>\n                            <!-- /Register Form -->\n\n                        </div>\n                    </div>\n                </div>\n                <!-- /Account Content -->\n\n            </div>\n        </div>\n\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n  }\n  \n  search(city:string, query:string){\n    console.log(\"city: \" + city, \"query : \" + query);\n    this.router.navigate([\"search\"], { queryParams: { \"city\": city, \"query\": query} });\n  }\n}\n","<section class=\"section section-search\">\n    <div class=\"container-fluid\">\n        <div class=\"banner-wrapper\">\n            <div class=\"banner-header text-center\">\n                <h1>Search Doctor, Make an Appointment</h1>\n                <p>Discover the best doctors, clinic & hospital the city nearest to you.</p>\n            </div>\n             \n            <!-- Search -->\n            <div class=\"search-box\">\n                <form action=\"templateshub.net\">\n                    <div class=\"form-group search-location\">\n                        <input #city type=\"text\" class=\"form-control\" placeholder=\"Search City\">\n                        <span class=\"form-text\">Based on your City</span>\n                    </div>\n                    <div class=\"form-group search-info\">\n                        <input #query type=\"text\" class=\"form-control\" placeholder=\"Search Doctors, Clinics, Hospitals, Diseases Etc\">\n                        <span class=\"form-text\">Ex : Dental or Sugar Check up etc</span>\n                    </div>\n                    <button (click)=\"search(city.value, query.value)\" type=\"submit\" class=\"btn btn-primary search-btn\"><i class=\"fas fa-search\"></i> <span>Search</span></button>\n                </form>\n            </div>\n            <!-- /Search -->\n            \n        </div>\n    </div>\n</section>\n<!-- /Home Banner -->\n","import { Component, OnInit } from '@angular/core';\nimport { Patient } from 'src/app/models/Patient';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Password } from 'src/app/models/Password';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  isPasswordFailed = false;\n  isPasswordSuccess = false;\n  errorMessage = '';\n  successMessage = '';\n  passwordMatch:boolean = true;\n  form:any = {};\n  patient:Patient;\n  avatar:any;\n  constructor(\n    private patientService:PatientService,\n    private authService:AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.getCurrentUser().subscribe(user => {\n      this.patientService.getById(user.id).subscribe(patient => {\n        this.patient = patient;\n      });\n      this.patientService.getAvatar(user.id).subscribe(avatar => {\n        this.avatar = 'data:image/jpeg;base64,' + avatar?.image?.data;\n      })\n    })\n  }\n\n  onSubmit(){\n    if (this.form.newPassword !== this.form.confirmPassword){\n      this.passwordMatch = false;\n      console.log(\"password does not match\");\n      return;\n    }\n    const password = new Password(this.form.oldPassword, this.form.newPassword);\n    this.patientService.updatePassword(this.patient.id, password).subscribe(message =>{\n      console.log(\"password success: \", JSON.stringify(message));\n      this.isPasswordSuccess = true;\n      this.successMessage = message.message;\n      setTimeout(() => this.successMessage = '', 2000);\n    }, err => {\n      this.isPasswordFailed = true;\n      console.log(\"password failed: \", JSON.stringify(err));\n      this.errorMessage = err.error.message;\n    });\n  }\n}","<div class=\"main-wrapper\">\n  <div class=\"breadcrumb-bar\">\n      <div class=\"container-fluid\">\n          <div class=\"row align-items-center\">\n              <div class=\"col-md-12 col-12\">\n                  <nav aria-label=\"breadcrumb\" class=\"page-breadcrumb\">\n                      <ol class=\"breadcrumb\">\n                          <li class=\"breadcrumb-item\"><a href=\"#\">Patient</a></li>\n                          <li class=\"breadcrumb-item active\" aria-current=\"page\">editPassword</li>\n                      </ol>\n                  </nav>\n                  <h2 class=\"breadcrumb-title\">Change Password</h2>\n              </div>\n          </div>\n      </div>\n  </div>\n  <div class=\"content\">\n      <div class=\"container-fluid\">\n          <div class=\"row\">\n\n              <!-- Profile Sidebar -->\n              <div class=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\n                  <app-patient-side-bar [avatar]=\"avatar\"></app-patient-side-bar>\n              </div>\n\n\n              <div class=\"col-md-7 col-lg-8 col-xl-9\">\n                  <div class=\"card\">\n                      <div class=\"card-body\">\n                          <div class=\"row\">\n                              <div class=\"col-md-12 col-lg-6\">\n                                  <form name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\n                                      <input type=\"password\" class=\"form-control floating\" name=\"oldPassword\"\n                                          [(ngModel)]=\"form.oldPassword\" required minlength=\"8\" maxlength=\"20\"\n                                          #oldPassword=\"ngModel\">\n                                      <label class=\"focus-label\">Old Password</label>\n                                      <div class=\"alert-danger\" *ngIf=\"f.submitted && oldPassword.invalid\">\n                                          <div *ngIf=\"oldPassword.errors.required\">Password is required</div>\n                                          <div *ngIf=\"oldPassword.errors.minlength\">\n                                              Password must be at least 8 characters\n                                          </div>\n                                          <div *ngIf=\"oldPassword.errors.maxlength\">\n                                              Password must be at most 20 characters\n                                          </div>\n                                      </div>\n                                      <input type=\"password\" class=\"form-control floating\" name=\"newPassword\"\n                                          [(ngModel)]=\"form.newPassword\" required minlength=\"8\" maxlength=\"20\"\n                                          #newPassword=\"ngModel\">\n                                      <label class=\"focus-label\">New Password</label>\n                                      <div class=\"alert-danger\" *ngIf=\"f.submitted && newPassword.invalid\">\n                                          <div *ngIf=\"newPassword.errors.required\">Password is required</div>\n                                          <div *ngIf=\"newPassword.errors.minlength\">\n                                              Password must be at least 8 characters\n                                          </div>\n                                          <div *ngIf=\"newPassword.errors.maxlength\">\n                                              Password must be at most 20 characters\n                                          </div>\n                                      </div>\n                                      <input type=\"password\" class=\"form-control floating\" name=\"confirmPassword\"\n                                          [(ngModel)]=\"form.confirmPassword\" required minlength=\"8\" maxlength=\"20\"\n                                          #confirmPassword=\"ngModel\">\n                                      <label class=\"focus-label\">Confirm New Password</label>\n                                      <div class=\"alert-danger\" *ngIf=\"f.submitted && confirmPassword.invalid\">\n                                          <div *ngIf=\"confirmPassword.errors.required\">Password is required</div>\n                                          <div *ngIf=\"confirmPassword.errors.minlength\">\n                                              Password must be at least 8 characters\n                                          </div>\n                                          <div *ngIf=\"confirmPassword.errors.maxlength\">\n                                              Password must be at most 20 characters\n                                          </div>\n                                          \n                                      </div>\n                                      <div class=\"alert alert-danger\"  *ngIf=\"!passwordMatch\">\n                                          new Password and Confirm Password must match\n                                      </div>\n                                      <div class=\"alert alert-danger\" *ngIf=\"f.submitted && isPasswordFailed\">\n                                          Password failed!<br />{{ errorMessage }}\n                                      </div>\n                                      <div class=\"alert alert-success\" *ngIf=\"f.submitted && successMessage \">\n                                            <br/>\n                                            <b>Success</b>{{ successMessage }}\n                                        </div>\n                                      <div class=\"submit-section\">\n                                          <button type=\"submit\" class=\"btn btn-primary submit-btn\">Submit</button>\n                                      </div>\n                                  </form>\n                                  <!-- /Change Password Form -->\n\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../../services/auth.service'\nimport { TokenStorageService } from '../../../../services/token-storage.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/models/User';\n\n\n@Component({\n  selector: 'app-patient-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n  retUrl:string = \"patient/profile\";\n\n  constructor(\n    private authService: AuthService,\n    private tokenStorage: TokenStorageService,\n    private router:Router,\n    private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n    this.activatedRoute.queryParamMap\n                .subscribe(params => {\n            this.retUrl = params.get('retUrl'); \n            console.log( 'LoginComponent/ngOnInit '+ this.retUrl);\n        });\n  }\n\n  onSubmit() {\n    this.authService.patientLogin(this.form).subscribe(\n      (user:User) => {\n        this.tokenStorage.saveToken(user.accessToken);\n        this.tokenStorage.saveUser(user);\n        this.tokenStorage.saveUserType(user.userType);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.authService.getLoggedInUser.emit(user);\n        console.log(\"login successful\");\n        console.log(this.tokenStorage.getUser());\n        console.log( 'return to '+ this.retUrl);\n           if (this.retUrl!=null) {\n                this.router.navigate( [this.retUrl]);\n           } else {\n                this.router.navigate( ['patient/appointments']);\n           }\n           \n        \n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  \n}","<div class=\"content \">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n\n                <!-- Login Tab Content -->\n                <div class=\"account-content\">\n                    <div class=\"row align-items-center justify-content-center\">\n                        <div class=\"col-md-7 col-lg-6 login-left\">\n                            <img src=\"assets/img/login-banner.png\" class=\"img-fluid\" alt=\"Doccure Login\">\n                        </div>\n                        <div class=\"col-md-12 col-lg-6 login-right\">\n                            <div class=\"login-header\">\n                                <h3>Login <span>AirDoc</span></h3>\n                            </div>\n                            <form *ngIf=\"!isLoggedIn\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\"\n                                novalidate>\n                                <div class=\"form-group\">\n                                    <div\n                                      class=\"alert alert-danger\"\n                                      role=\"alert\"\n                                      *ngIf=\"f.submitted && isLoginFailed\"\n                                    >\n                                      Login failed: {{ errorMessage }}\n                                    </div>\n                                  </div>\n                                <div class=\"form-group form-focus\">\n                                    <input class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\" required\n                                        #email=\"ngModel\" type=\"email\" class=\"form-control floating\">\n                                    <label class=\"focus-label\">Email</label>\n                                    \n                                    </div>\n                                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && email.invalid\"> Email is required!</div>\n                                    <div class=\"form-group form-focus\">\n                                        <input name=\"password\" [(ngModel)]=\"form.password\" required minlength=\"6\"\n                                            #password=\"ngModel\" type=\"password\" class=\"form-control floating\">\n                                        <label class=\"focus-label\">Password</label>\n                                        \n                                    </div>\n                                    <div class=\"alert alert-danger\" role=\"alert\"\n                                            *ngIf=\"f.submitted && password.invalid\">\n                                            <div *ngIf=\"password.errors.required\">Password is required</div>\n                                            <div *ngIf=\"password.errors.minlength\">\n                                                Password must be at least 6 characters\n                                            </div>\n                                        </div>\n                                    <div class=\"text-right\">\n                                        <a class=\"forgot-link\" routerLink=\"/doctor/forgot-password\">Forgot Password ?</a>\n                                    </div>\n                                    <button class=\"btn btn-primary btn-block btn-lg login-btn\"\n                                        type=\"submit\">Login</button>\n                                    <div class=\"text-center dont-have\">Don’t have an account? <a\n                                            routerLink=\"/patient/signup\">Register</a></div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <!-- /Login Tab Content -->\n\n            </div>\n        </div>\n\n    </div>\n\n</div>\n<!-- /Page Content -->","import { Component, OnInit, Input } from '@angular/core';\nimport { Doctor } from 'src/app/models/Doctor';\nimport { Appointment } from 'src/app/models/Appointment';\nimport { DoctorService } from 'src/app/services/doctor.service';\n\n@Component({\n  selector: 'app-patient-appointment',\n  templateUrl: './patient-appointment.component.html',\n  styleUrls: ['./patient-appointment.component.css']\n})\nexport class PatientAppointmentComponent implements OnInit {\n\n  @Input() appointment:Appointment;\n  doctor:Doctor;\n  doctorAvatar:any;\n  appointmentDate:Date;\n  bookingDate:Date;\n\n  constructor(private doctorSerivce:DoctorService) { }\n\n  ngOnInit(): void {\n    this.appointmentDate = new Date(this.appointment.appointmentDate);\n    this.bookingDate = new Date(this.appointment.bookingDate);\n    this.doctorSerivce.getById(this.appointment.doctorId).subscribe(doc => {\n      this.doctor = doc;\n    });\n    this.doctorSerivce.getAvatar(this.appointment.doctorId).subscribe(avatar => {\n      this.doctorAvatar = avatar;\n    })\n  }\n\n}\n","<li class=\"list-group-item\">\n    <div class=\"row\">\n        <div class=\"col-sm\">\n            <div class=\"avatar\">\n                <img class=\"avatar-img rounded-circle\" alt=\"Doctor Image\" [src]=\"doctorAvatar\">\n            </div>\n            <h6>Dr {{doctor.firstname | titlecase }} {{doctor.lastname | titlecase}}</h6>\n        </div>\n        <div class=\"col-sm\">{{appointment.description | slice:0:30}}</div>\n        <div class=\"col-sm\">{{appointmentDate | date:'medium'}}</div>\n        <div class=\"col-sm\">{{bookingDate | date:'medium'}}</div>\n        <div *ngIf=\"appointment.state == 'ACCEPTED'\" class=\"col-sm\"><span class=\"badge badge-pill bg-success-light\">{{appointment.state | titlecase}}</span></div>\n        <div *ngIf=\"appointment.state == 'CANCELED'\" class=\"col-sm\"><span class=\"badge badge-pill bg-danger-light\">{{appointment.state | titlecase}}</span></div>\n    </div>\n</li>","import { Component, OnInit } from '@angular/core';\nimport { Appointment } from 'src/app/models/Appointment';\nimport { AppointmentService } from 'src/app/services/appointment.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Patient } from 'src/app/models/Patient';\nimport { PatientService } from 'src/app/services/patient.service';\n\n@Component({\n  selector: 'app-patient-appointments',\n  templateUrl: './patient-appointments.component.html',\n  styleUrls: ['./patient-appointments.component.css']\n})\nexport class PatientAppointmentsComponent implements OnInit {\n\n  avatar:any;\n  appointments:Appointment[]\n  patient:Patient;\n  constructor(\n    private appointmentService:AppointmentService,\n    private authService:AuthService,\n    private patientService:PatientService) { }\n\n  ngOnInit(): void {\n    this.authService.getCurrentUser().subscribe(user => {\n      this.patientService.getById(user.id).subscribe(patient =>{\n        this.patient = patient;\n      });\n      this.patientService.getAvatar(user.id).subscribe(avatar => {\n        this.avatar = 'data:image/jpeg;base64,' + avatar?.image?.data;\n      });\n      this.appointmentService.getAllPatientAppoitments(user.id).subscribe(apps =>{\n        this.appointments = apps;\n        console.log(\"appointments: \", JSON.stringify(apps));\n      });\n    })\n  }\n\n}\n","<!-- Breadcrumb -->\n<div class=\"breadcrumb-bar\">\n    <div class=\"container-fluid\">\n        <div class=\"row align-items-center\">\n            <div class=\"col-md-12 col-12\">\n                <nav aria-label=\"breadcrumb\" class=\"page-breadcrumb\">\n                    <ol class=\"breadcrumb\">\n                        <li class=\"breadcrumb-item\"><a href=\"index-2.html\">Home</a></li>\n                        <li class=\"breadcrumb-item active\" aria-current=\"page\">Dashboard</li>\n                    </ol>\n                </nav>\n                <h2 class=\"breadcrumb-title\">Dashboard</h2>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- /Breadcrumb -->\n\n<!-- Page Content -->\n<div class=\"content\">\n    <div class=\"container-fluid\">\n\n        <div class=\"row\">\n            <!-- Profile-SideBar -->\n            <div class=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\n                <app-patient-side-bar [avatar]=\"avatar\"></app-patient-side-bar>\n            </div>\n\n            <!-- Profile-SideBar -->\n            <div class=\"col-md-7 col-lg-8 col-xl-9\">\n                <ul class=\"list-group\">\n                    <li class=\"list-group-item\">\n                        <div class=\"row\">\n                            <div class=\"col-sm\">\n                                Doctor\n                            </div>\n                            <div class=\"col-sm\">\n                                Description\n                            </div>\n                            <div class=\"col-sm\">\n                                Appointment Date\n                            </div>\n                            <div class=\"col-sm\">\n                                Booking Date\n                            </div>\n                            <div class=\"col-sm\">\n                                State\n                            </div>\n                            \n                            \n                        </div>\n                    </li>\n                    <app-patient-appointment *ngFor=\"let appointment of appointments\" [appointment]=\"appointment\">\n                    </app-patient-appointment>\n                    <li *ngIf=\"appointments.length === 0\" class=\"list-group-item\">\n                        <h6>You Have No appointments</h6>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n    </div>\n\n</div>\n<!-- /Page Content -->","import { Component, OnInit, Input } from '@angular/core';\nimport { Patient } from 'src/app/models/Patient';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { PatientService } from 'src/app/services/patient.service';\n\n\n@Component({\n  selector: 'app-patient-side-bar',\n  templateUrl: './patient-side-bar.component.html',\n  styleUrls: ['./patient-side-bar.component.css']\n})\nexport class PatientSideBarComponent implements OnInit {\n\n  @Input() avatar:any;\n  patient:Patient;\n  constructor(\n    private authService:AuthService,\n    private patientService:PatientService ) { }\n\n  ngOnInit(): void {\n    this.authService.getCurrentUser().subscribe(user => {\n      this.patientService.getById(user.id).subscribe(patient => {\n        this.patient = patient;\n      });\n    })\n    \n  }\n\n}\n","<!-- Profile Sidebar -->\n<div class=\"profile-sidebar\">\n    <div class=\"widget-profile pro-widget-content\">\n        <div class=\"profile-info-widget\">\n            <a href=\"#\" class=\"booking-doc-img\">\n                <!-- <img [src]=\"avatar\" alt=\"Patient Image\"> -->\n                <img *ngIf=\"avatar.length > 100\" [src]=\"avatar\" alt=\"Patient Image\">\n                <img *ngIf=\"avatar.length < 100\" src=\"assets/img/patients/default-patient.jpeg\"  alt=\"Patient Image\">\n            </a>\n            <div class=\"profile-det-info\">\n                <h3>{{patient?.firstname | titlecase }} {{patient?.lastname | titlecase }}</h3>\n                <div class=\"patient-details\">\n                    <!-- <h5><i class=\"fas fa-birthday-cake\"></i> 24 Jul 1983, 38 years</h5> -->\n                    <!-- <h5 class=\"mb-0\"><i class=\"fas fa-map-marker-alt\"></i> Newyork, USA</h5> -->\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"dashboard-widget\">\n        <nav class=\"dashboard-menu\">\n            <ul>\n                <li routerLinkActive=\"active\">\n                    <a routerLink=\"/patient/appointments\">\n                        <i class=\"fas fa-bookmark\"></i>\n                        <span>Appointments</span>\n                    </a>\n                </li>\n                <li routerLinkActive=\"active\" >\n                    <a routerLink=\"/patient/profile\">\n                        <i class=\"fas fa-user-cog\"></i>\n                        <span>Profile Settings</span>\n                    </a>\n                </li>\n                <li routerLinkActive=\"active\">\n                    <a routerLink=\"/patient/change-password\">\n                        <i class=\"fas fa-lock\"></i>\n                        <span>Change Password</span>\n                    </a>\n                </li>\n            </ul>\n        </nav>\n    </div>\n\n</div>\n\n<!-- / Profile Sidebar -->","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { Patient } from 'src/app/models/Patient';\nimport { HttpResponse, HttpEventType } from '@angular/common/http';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  patient:Patient;\n  avatar:any;\n  birthday:string;\n  currentSelectedAvatar:any;\n  uploadProgress:number;\n  uploadErrorMessage:string;\n  constructor(\n    private authService:AuthService,\n    private patientService:PatientService\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.getCurrentUser().subscribe(user => {\n      this.patientService.getById(user.id).subscribe(patient => {\n        this.patient = patient;\n        // const isoBirthday = new Date(patient.birthday);\n        // this.birthday = isoBirthday.toISOString().substr(0, 10);;\n        console.log(\"birthday : \", this.patient.birthday); \n      });\n      this.patientService.getAvatar(user.id).subscribe(avatar => {\n        this.avatar = 'data:image/jpeg;base64,' + avatar?.image?.data;\n      });\n    })\n  }\n\n\n  onSubmit(){\n    console.log(\"patient new name: \", JSON.stringify(this.patient));\n    // const birthday = new Date(this.birthday)\n    // this.patient.birthday = birthday.toISOString();\n    this.patientService.updatePatient(this.patient).subscribe(patient => {\n       this.patient = patient;\n       window.location.reload();\n    });\n  }\n\n\n  uploadAvatar(event){\n    console.log(\"upload started\");\n    this.currentSelectedAvatar = event.target.files.item(0);\n    this.patientService.uploadAvatar(this.patient.id,this.currentSelectedAvatar ).subscribe(\n      event => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.uploadProgress = Math.round(100 * event.loaded / event.total);\n        } else if (event instanceof HttpResponse) {\n          this.patientService.getAvatar(this.patient.id).subscribe(avatar => {\n            this.avatar = 'data:image/jpeg;base64,' + avatar.image.data\n            this.uploadProgress = 0;\n            this.currentSelectedAvatar = undefined;\n          });\n        }\n      },\n      err => {\n        this.uploadProgress = 0;\n        this.uploadErrorMessage = 'Could not upload the Photo!';\n        this.currentSelectedAvatar = undefined;\n      });\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>AirDoc</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=0\">\n</head>\n<body>\n<div class=\"main-wrapper\">\n  <div class=\"breadcrumb-bar\">\n    <div class=\"container-fluid\">\n      <div class=\"row align-items-center\">\n        <div class=\"col-md-12 col-12\">\n          <nav aria-label=\"breadcrumb\" class=\"page-breadcrumb\">\n            <ol class=\"breadcrumb\">\n              <li class=\"breadcrumb-item\"><a href=\"#\">Patient</a></li>\n              <li class=\"breadcrumb-item active\" aria-current=\"page\">Profile Settings</li>\n            </ol>\n          </nav>\n          <h2 class=\"breadcrumb-title\">Profile Settings</h2>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"content\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n\n        <div class=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\n          <app-patient-side-bar [avatar]=\"avatar\"></app-patient-side-bar>\n        </div>\n        <div class=\"col-md-7 col-lg-8 col-xl-9\">\n          <div class=\"card\">\n            <div *ngIf=\"!!patient\" class=\"card-body\">\n\n              <!-- Profile Settings Form -->\n              <form (ngSubmit)=\"onSubmit()\">\n                <div class=\"row form-row\">\n                  <div class=\"col-12 col-md-12\">\n                    <div class=\"form-group\">\n                      <div class=\"change-avatar\">\n                        <div class=\"profile-img\">\n                            <!-- <img [src]=\"avatar\" alt=\"Patient Image\"> -->\n                            <img *ngIf=\"avatar.length > 100\" [src]=\"avatar\" alt=\"Patient Image\">\n                            <img *ngIf=\"avatar.length < 100\" src=\"assets/img/patients/default-patient.jpeg\"  alt=\"Doctor Image\">\n                                      \n                        </div>\n                        <div class=\"upload-img\">\n                            <div *ngIf=\"currentSelectedAvatar\" class=\"progress\">\n                                <div class=\"progress-bar progress-bar-info progress-bar-striped\"\n                                    role=\"progressbar\" attr.aria-valuenow=\"{{ uploadProgress }}\"\n                                    aria-valuemin=\"0\" aria-valuemax=\"100\"\n                                    [ngStyle]=\"{ width: uploadProgress + '%' }\">\n                                    {{ uploadProgress }}%\n                                </div>\n                            </div>\n                            <div class=\"change-photo-btn\">\n                                <span><i class=\"fa fa-upload\"></i> Upload Photo</span>\n                                <input type=\"file\" class=\"upload\" (change)=\"uploadAvatar($event)\">\n                            </div>\n                            <small class=\"form-text text-muted\">Allowed JPG, GIF or PNG. Max size of\n                                2MB</small>\n                        </div>\n                    </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12 col-md-6\">\n                    <div class=\"form-group\">\n                      <label>First Name</label>\n                      <input [value]=\"patient.firstname\" [(ngModel)]=\"patient.firstname\" name=\"firstname\" type=\"text\" class=\"form-control\" >\n                    </div>\n                  </div>\n                  <div class=\"col-12 col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Last Name</label>\n                      <input [value]=\"patient.lastname\" [(ngModel)]=\"patient.lastname\" name=\"lastname\" type=\"text\" class=\"form-control\" >\n                    </div>\n                  </div>\n                  <div class=\"col-12 col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Date of Birth</label>\n                        <input [(ngModel)]=\"patient.birthday\" name=\"birthday\" type=\"date\" class=\"form-control \">\n                    </div>\n                  </div>\n                  <div class=\"col-12 col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Blood Group</label>\n                      <select [value]=\"patient?.bloodGroup\" [(ngModel)]=\"patient.bloodGroup\" name=\"bloodGroup\" class=\"form-control select\">\n                        <option>A-</option>\n                        <option>A+</option>\n                        <option>B-</option>\n                        <option>B+</option>\n                        <option>AB-</option>\n                        <option>AB+</option>\n                        <option>O-</option>\n                        <option>O+</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div class=\"col-12 col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Email ID</label>\n                      <input [value]=\"patient.email\" [(ngModel)]=\"patient.email\" name=\"email\" type=\"email\" class=\"form-control\" readonly>\n                    </div>\n                  </div>\n                  <div class=\"col-12 col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Mobile</label>\n                      <input [value]=\"patient.phone\" [(ngModel)]=\"patient.phone\"  name=\"phone\" type=\"text\"class=\"form-control\">\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label>Address</label>\n                      <input [value]=\"patient.address\" [(ngModel)]=\"patient.address\" name=\"address\" type=\"text\" class=\"form-control\" >\n                    </div>\n                  </div>\n                  <div class=\"col-12 col-md-6\">\n                    <div class=\"form-group\">\n                      <label>City</label>\n                      <input [value]=\"patient.city\" [(ngModel)]=\"patient.city\" name=\"city\" type=\"text\" class=\"form-control\" >\n                    </div>\n                  </div>\n                  <div class=\"col-12 col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Zip Code</label>\n                      <input [value]=\"patient.zipCode\" [(ngModel)]=\"patient.zipCode\" name=\"zipCode\" type=\"text\" class=\"form-control\">\n                    </div>\n                  </div>\n                  <div class=\"col-12 col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Country</label>\n                      <input [value]=\"patient.country\" [(ngModel)]=\"patient.country\" name=\"country\" type=\"text\" class=\"form-control\">\n                    </div>\n                  </div>\n                </div>\n                <div class=\"submit-section\">\n                  <button type=\"submit\" class=\"btn btn-primary submit-btn\">Save</button>\n                </div>\n              </form>\n              <!-- /Profile Settings Form -->\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n  <!-- /Page Content -->\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-patient-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  form: any = {};\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private router:Router, private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.authService.patientRegister(this.form).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n        this.router.navigate([\"patient/login\"]);\n        \n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n","<div class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n\n                <!-- Account Content -->\n                <div class=\"account-content\">\n                    <div class=\"row align-items-center justify-content-center\">\n                        <div class=\"col-md-7 col-lg-6 login-left\">\n                            <img src=\"assets/img/login-banner.png\" class=\"img-fluid\" alt=\"Login Banner\">\n                        </div>\n                        <div class=\"col-md-12 col-lg-6 login-right\">\n                            <div class=\"login-header\">\n                                <h3>Patient Register <a routerLink=\"/doctor/signup\">Not a Patient?</a></h3>\n                            </div>\n\n                            <!-- Register Form -->\n                            <form *ngIf=\"!isSuccessful\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\"\n                                novalidate>\n                                \n                                <div class=\"form-group form-focus\">\n                                    <input type=\"text\" class=\"form-control floating\" name=\"firstname\"\n                                        [(ngModel)]=\"form.firstname\" required minlength=\"3\" maxlength=\"20\"\n                                        #firstname=\"ngModel\">\n                                    <label class=\"focus-label\">First Name</label>\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && firstname.invalid\">\n                                        <div *ngIf=\"firstname.errors.required\">First Name is required</div>\n                                        <div *ngIf=\"firstname.errors.minlength\">\n                                            First Name must be at least 3 characters\n                                        </div>\n                                        <div *ngIf=\"firstname.errors.maxlength\">\n                                            First Name must be at most 20 characters\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group form-focus\">\n                                    <input type=\"text\" class=\"form-control floating\" name=\"lastname\"\n                                        [(ngModel)]=\"form.lastname\" required minlength=\"3\" maxlength=\"20\"\n                                        #lastname=\"ngModel\">\n                                    <label class=\"focus-label\">Last Name</label>\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && lastname.invalid\">\n                                        <div *ngIf=\"lastname.errors.required\">Last Name is required</div>\n                                        <div *ngIf=\"lastname.errors.minlength\">\n                                            Last Name must be at least 3 characters\n                                        </div>\n                                        <div *ngIf=\"username.errors.maxlength\">\n                                            Last Name must be at most 20 characters\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group form-focus\">\n                                    <input type=\"text\" class=\"form-control floating\" name=\"username\"\n                                        [(ngModel)]=\"form.username\" required minlength=\"3\" maxlength=\"20\"\n                                        #username=\"ngModel\">\n                                    <label class=\"focus-label\">Username</label>\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && username.invalid\">\n                                        <div *ngIf=\"username.errors.required\">Username is required</div>\n                                        <div *ngIf=\"username.errors.minlength\">\n                                            Username must be at least 3 characters\n                                        </div>\n                                        <div *ngIf=\"username.errors.maxlength\">\n                                            Username must be at most 20 characters\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group form-focus\">\n                                    <input type=\"tel\" class=\"form-control floating\" name=\"phone\"\n                                    [(ngModel)]=\"form.phone\" required minlength=\"8\" maxlength=\"20\"\n                                    #phone=\"ngModel\">\n                                    <label class=\"focus-label\">Phone Number</label>\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && phone.invalid\">\n                                        <div *ngIf=\"phone.errors.required\">Phone Number is required</div>\n                                        <div *ngIf=\"phone.errors.minlength\">\n                                            Phone Number must be at least 8 characters\n                                        </div>\n                                        <div *ngIf=\"phone.errors.maxlength\">\n                                            Phone Number must be at most 20 characters\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group form-focus\">\n                                    <input type=\"email\" class=\"form-control floating\" name=\"email\"\n                                        [(ngModel)]=\"form.email\" required minlength=\"10\" maxlength=\"50\"\n                                        #email=\"ngModel\">\n                                    <label class=\"focus-label\">Email</label>\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\n                                        <div *ngIf=\"email.errors.required\">Email is required</div>\n                                        <div *ngIf=\"email.errors.minlength\">\n                                            Email must be at least 10 characters\n                                        </div>\n                                        <div *ngIf=\"email.errors.maxlength\">\n                                            Email must be at most 50 characters\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group form-focus\">\n                                    <input type=\"password\" class=\"form-control floating\" name=\"password\"\n                                    [(ngModel)]=\"form.password\" required minlength=\"8\" maxlength=\"20\"\n                                    #password=\"ngModel\">\n                                    <label class=\"focus-label\">Create Password</label>\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\n                                        <div *ngIf=\"password.errors.required\">Password is required</div>\n                                        <div *ngIf=\"password.errors.minlength\">\n                                            Password must be at least 8 characters\n                                        </div>\n                                        <div *ngIf=\"phone.errors.maxlength\">\n                                            Password must be at most 20 characters\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"text-right\">\n                                    <a class=\"forgot-link\" routerLink=\"patient/login\">Already have an account?</a>\n                                </div>\n                                <button class=\"btn btn-primary btn-block btn-lg login-btn\" type=\"submit\">Signup</button>\n                                <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n                                    Signup failed!<br />{{ errorMessage }}\n                                </div>\n                            </form>\n                            <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n                                Your registration is successful!\n                              </div>\n                            <!-- /Register Form -->\n\n                        </div>\n                    </div>\n                </div>\n                <!-- /Account Content -->\n\n            </div>\n        </div>\n\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Doctor } from 'src/app/models/Doctor';\nimport { Review } from 'src/app/models/Review';\nimport { DoctorService } from 'src/app/services/doctor.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  doctors: Array<Doctor> = [];\n  searchCity:string = \"\";\n  searchQuery:string = \"\";\n\n  constructor(\n    private doctorService: DoctorService,\n    private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParamMap\n                .subscribe(params => {\n            this.searchCity = params.get('city');\n            this.searchQuery = params.get('query');\n            this.search(this.searchCity, this.searchQuery);\n        });\n    // this.doctorService.getDoctors().subscribe((doctors) => {\n    //     console.log(doctors);\n    //     this.doctors = doctors;\n    //   });\n\n    \n\n  }\n\n  search(location:string, query:string){\n    console.log(\"searchCom\", \"location: \" + location, \"query: \" +query);\n    this.doctorService\n    .search(location, query)\n    .subscribe(doctors => this.doctors = doctors);\n  }\n\n}\n","<!-- Breadcrumb -->\n<div class=\"breadcrumb-bar\">\n    <div class=\"container-fluid\">\n        <div class=\"row align-items-center\">\n            <div class=\"col-md-8 col-12\">\n                <nav aria-label=\"breadcrumb\" class=\"page-breadcrumb\">\n                    <ol class=\"breadcrumb\">\n                        <li class=\"breadcrumb-item\"><a routerLink=\"/home\">Home</a></li>\n                        <li class=\"breadcrumb-item active\" aria-current=\"page\">Search</li>\n                    </ol>\n                </nav>\n                <h2 class=\"breadcrumb-title\">{{doctors.length}} matches found for : {{searchQuery}} In {{searchCity}}</h2>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- /Breadcrumb -->\n<!-- Search -->\n<div class=\"row mt-3 d-flex justify-content-center\">\n    <div class=\"search-box\">\n        <form>\n            <div class=\"form-group search-location\">\n                <input #city type=\"text\" class=\"form-control\" placeholder=\"Search City\">\n            </div>\n            <div class=\"form-group search-info\">\n                <input #query type=\"text\" class=\"form-control\" placeholder=\"Search Doctors, Clinics, Hospitals, Diseases Etc\">\n            </div>\n            <div class=\"btn-search\">\n                <button (click)=\"search(city.value, query.value)\" type=\"button\" class=\"btn btn-block\">Search</button>\n            </div>\t\n            \n        </form>\n    </div>\n    </div>\n    <!-- Search end -->\n\n<!-- Page Content -->\n<div class=\"content\">\n    <div class=\"container-fluid\">\n\n        <div class=\"row\">\n            <div class=\"col-md-12 col-lg-8 col-xl-9 m-auto\">\n                <app-doctor *ngFor=\"let doctor of doctors\" [doctor]=\"doctor\"></app-doctor>\t\n            </div>\n        </div>\n\n    </div>\n\n</div>\t\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-patient',\n  templateUrl: './patient.component.html',\n  styleUrls: ['./patient.component.css']\n})\nexport class PatientComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>patient works!</p>\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-rating-star',\n  templateUrl: './rating-star.component.html',\n  styleUrls: ['./rating-star.component.css']\n})\nexport class RatingStarComponent implements OnInit {\n\n  // @Input() max: number;\n  @Output() onRating = new EventEmitter<number>();\n  @Input() readonly:boolean = true;\n  @Input() ratedCount:number;\n \n  max:number = 5;\n  maxItem : any[];\n \n constructor(){\n     this.ratedCount = 0;\n }\n \n ngOnInit(){\n     this.maxItem = [];\n     for(var i=0;i<this.max;i++){\n         this.maxItem.push(i+1);\n     }\n }\n setClass(s:number){\n  if(this.readonly){\n    return {\n      \"fa fa-star\":true,\n      \"ratingIcon\":true,\n      \"ratingHover\":false,\n      \"filled\": s <= this.ratedCount,\n     }\n   }\n   return {\n    \"fa fa-star\":true,\n    \"ratingIcon\":true,\n    \"ratingHover\":true,\n    \"filled\": s <= this.ratedCount,\n   }\n\n }\n setHover(){\n   if(this.readonly){\n    return {\n      \"ratingIcon\": true,\n      \"ratingHover\":false,\n     }\n   }\n   return {\n    \"ratingIcon\":true,\n    \"ratingHover\":true,\n   }\n}\n toggleRating(s:number){\n   if (this.readonly){\n     return;\n   }\n      this.ratedCount = s;\n      this.onRating.emit(this.ratedCount);\n }\n\n}\n","<i [ngClass]=\"setClass(s)\" \naria-hidden=\"true\" (click)=\"toggleRating(s)\"\n*ngFor = \"let s of maxItem\"></i>\n\n<!-- <div class=\"rating\">\n    <span [ngClass]=\"setHover()\" *ngFor = \"let s of maxItem\">\n       <i [ngClass]=\"setClass(s)\" \n          aria-hidden=\"true\" (click)=\"toggleRating(s)\"></i>\n    </span>\n</div> -->\n\n","import { Component, OnInit, Output , EventEmitter} from '@angular/core';\nimport { Review } from 'src/app/models/Review';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-review-form',\n  templateUrl: './review-form.component.html',\n  styleUrls: ['./review-form.component.css']\n})\nexport class ReviewFormComponent implements OnInit {\n\n  @Output() addReview:EventEmitter<Review> = new EventEmitter()\n\n  rating:number=1;\n  content:string;\n  authorId:string;\n  constructor(private authService:AuthService) { }\n\n  ngOnInit(): void {\n     this.authService.getCurrentUser().subscribe(res => {\n      this.authorId = res.id;\n      console.log(\"::::::::: authorId: \", this.authorId);\n    });\n    \n  }\n\n  onRating(rating){\n    //TODO check rating max and min\n    console.log(\"rating: \", rating);\n    this.rating = rating;\n  }\n\n  onSubmit(){\n    console.log(\"authorId befor submit: \", this.authorId);\n    let review = new Review(this.content, [], this.rating, this.authorId);\n    console.log(\"review : \", JSON.stringify(review));\n    this.addReview.emit(review);\n    this.content = \"\";\n    this.rating = 0;\n  }\n}\n","<form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label>Review</label> <br>\n        <app-rating-star (onRating)=\"onRating($event)\" [readonly]=\"false\"></app-rating-star>\n    </div>\n    <div class=\"form-group\">\n        <label>Your review</label>\n        <textarea id=\"review_desc\" maxlength=\"100\" \n        class=\"form-control\" name=\"content\" [(ngModel)]=\"content\"></textarea>\n      \n      <div class=\"d-flex justify-content-between mt-3\"><small class=\"text-muted\"><span id=\"chars\">100</span> characters remaining</small></div>\n    </div>\n    <hr>\n    <div class=\"submit-section\">\n        <button type=\"submit\" class=\"btn btn-primary submit-btn\">Add Review</button>\n    </div>\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Review } from 'src/app/models/Review';\nimport { Patient } from 'src/app/models/Patient';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { Like } from 'src/app/models/Like';\nimport { ReviewService } from 'src/app/services/review.service';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\nexport class ReviewComponent implements OnInit {\n\n  currentUserId:string;\n  author:Patient;\n  avatar:any;\n  like:Like;\n  isLiked:boolean;\n  @Input() review:Review;\n  @Output() deleteReview:EventEmitter<Review> = new EventEmitter();\n  @Output() editReview:EventEmitter<Review> = new EventEmitter();\n  //@Output() toggleLike:EventEmitter<Like> = new EventEmitter();\n  constructor(\n    private patientService:PatientService, \n    private reviewService:ReviewService,\n    private autheService:AuthService) { }\n\n  ngOnInit(): void {\n    //TODO get author\n    \n    this.patientService.getById(this.review.patientId).subscribe(res => {\n      this.author = res;\n    });\n    this.patientService.getAvatar(this.review.patientId).subscribe(res=> {\n        this.avatar = 'data:image/jpeg;base64,' + res?.image?.data;\n        console.log(\"Avatar: \", this.avatar);\n    });\n    this.autheService.getCurrentUser().subscribe(res => {\n      this.currentUserId = res.id;\n      this.like = new Like(this.currentUserId);\n      this.setLiked(this.like);\n    })\n    \n\n  }\n\n  setLiked(like:Like){\n    this.isLiked = this.review.likes.includes(like);\n    console.log(\"isLiked: \" + this.isLiked);\n  }\n  getLiked():boolean{\n    return this.review.likes.includes(this.like);\n  }\n\n  toggleLike(){\n   \n    if(!this.isLiked){\n      console.log(\"liking\")\n      this.reviewService.likeReview(\n        this.review.id, this.like).subscribe(res => {\n          console.log(\"liking: \", JSON.stringify(res));\n          this.review.likes.push(this.like);\n          this.isLiked = true;\n        });\n    }\n    if(this.isLiked){\n      console.log(\"unliking\")\n      this.reviewService.unlikeReview(\n        this.review.id, this.like).subscribe(res => {\n          console.log(\"unliking: \", JSON.stringify(res));\n          let likes = this.review.likes;\n          console.log(\"befor delete \", JSON.stringify(likes));\n          const index = likes.indexOf(this.like, 0);\n          if (index > -1) {\n             likes.splice(index, 1);\n          }\n          console.log(\"after delete \", JSON.stringify(likes));\n          this.review.likes = likes;\n          this.isLiked = false;\n        });\n    }\n  }\n\n  onEdit(){\n    this.editReview.emit(this.review);\n  }\n\n  onDelete(){\n    this.deleteReview.emit(this.review);\n  }\n\n  setClass(){\n    return {\n      \"liked\":this.isLiked,\n      \"fa\": true,\n      \"fa-thumbs-up\": true\n    }\n  }\n  \n}\n","<li>\n    <div class=\"comment\">\n        <img class=\"avatar avatar-sm rounded-circle\" alt=\"Patient Image\" [src]=\"avatar\">\n        <div class=\"comment-body\">\n            <div class=\"meta-data\">\n                <span *ngIf=\"author\" class=\"comment-author\">{{author.firstname | titlecase}} {{author.lastname | titlecase}}</span>\n                <app-rating-star [ratedCount]=\"review?.rating\" [readonly]=\"true\"></app-rating-star>\n            </div>\n            <p class=\"comment-content\">\n                {{review?.content}}\n            </p>\n            <div class=\"comment-reply\">\n                <p class=\"recommend-btn\">\n                    <a (click)=\"toggleLike()\" class=\"like-btn\">\n                        <i [ngClass]=\"setClass()\"></i> ({{review?.likes?.length}})\n                    </a>\n                    <!-- <a *ngIf=\"author && currentUserId && author.id == currentUserId\" (click)=\"onEdit()\" class=\"edit-btn\">\n                        <i class=\"fa fa-edit\"></i>\n                    </a> -->\n                    <a *ngIf=\"author && currentUserId && author.id == currentUserId\" (click)=\"onDelete()\" class=\"trash-btn\">\n                        <i class=\"fa fa-trash\"></i>\n                    </a>\n                </p>\n            </div>\n        </div>\n    </div>\n<br>\n</li>\n","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport { Doctor } from 'src/app/models/Doctor';\nimport { ReviewService } from 'src/app/services/review.service';\nimport { Review } from 'src/app/models/Review';\n\n@Component({\n  selector: 'app-reviews',\n  templateUrl: './reviews.component.html',\n  styleUrls: ['./reviews.component.css']\n})\nexport class ReviewsComponent implements OnInit {\n\n  @Input() doctor:Doctor;\n  @Input() isPatient:boolean;\n  @Output() refresh:EventEmitter<any> = new EventEmitter()\n  reviews:Review[]\n  rating:number;\n  constructor(private reviewService:ReviewService) { }\n\n  ngOnInit(): void {\n    this.refreshReviews();\n  }\n\n\n  addReview(review:Review){\n    console.log('review : ' + JSON.stringify(review))\n    this.reviewService.addReview(this.doctor.id, review).subscribe(res => {\n      console.log(\"doctor reviews : \", JSON.stringify(res))\n      this.refreshReviews()\n    });\n  }\n\n  deleteReview(review:Review){\n    this.reviewService.deleteReview(this.doctor.id, review.id).subscribe(res => {\n      console.log(\"doctor reviews : \", JSON.stringify(res))\n      // const index = this.reviews.indexOf(review, 0);\n      //     if (index > -1) {\n      //        this.reviews.splice(index, 1);\n      //     }\n      this.refreshReviews();\n    });\n  }\n\n  editReview(review:Review){\n    this.reviewService.updateReview(this.doctor.id, review).subscribe(res => {\n      console.log(\"doctor reviews : \", JSON.stringify(res))\n      this.refreshReviews()\n    });\n  }\n\n  refreshReviews(){\n    console.log(\"doctor: \", JSON.stringify(this.doctor))\n    this.refresh.emit(\"refresh\");\n    this.reviewService.getReviews(this.doctor?.id).subscribe(res => {\n      console.log(\"doctor reviews : \", JSON.stringify(res))\n      this.reviews = res;\n    })\n  }\n}\n","<!-- Review Listing -->\n<div class=\"widget review-listing\">\n    <ul class=\"comments-list\">\n        <app-review \n        *ngFor=\"let review of reviews\" \n        [review]=\"review\"\n        (deleteReview)=\"deleteReview($event)\"\n        (editReview)=\"editReview($event)\"></app-review>\n    </ul>\n</div>\n<!-- /Review Listing -->\n\n <!-- Write Review -->\n <div *ngIf=\"isPatient\" class=\"write-review\">\n    <h4>Write a review for <strong> Dr. {{doctor?.firstname | titlecase}} {{doctor?.lastname | titlecase}}</strong></h4>\n    \n    <!-- Write Review Form -->\n    <app-review-form (addReview)=\"addReview($event)\"></app-review-form>\n    <!-- /Write Review Form -->\n    \n</div>\n<!-- /Write Review -->\n\n","export class Appointment {\n    patientId:string;\n    doctorId:string;\n    state:string;\n    appointmentDate:string; \n    bookingDate:string;\n    description:string;\n}","import { ClinicLocation } from './ClinicLocation';\nexport class Clinic{\n    name:string;\n    description:string;\n    services:Array<string>;\n    specialities:Array<string>;\n    city:string;\n    country:string;\n    address:string;\n    minPrice:number;\n    maxPrice:number;\n    consultPrice:number;\n    location:ClinicLocation;\n\n    static empty():Clinic{\n        return {\n            name:\"\",\n            description:\"\",\n            services:[],\n            specialities:[],\n            city:\"\",\n            country:\"\",\n            address:\"\",\n            minPrice:0,\n            maxPrice:0,\n            consultPrice:0,\n            location:new ClinicLocation(0, 0, 2)\n        };\n    }\n}","export class ClinicLocation {\n    latitude:number;\n    longitude:number;\n    zoom:number;\n\n    constructor(latitude:number, longitude:number, zoom:number){\n        this.latitude = latitude;\n        this.longitude = longitude;\n        this.zoom = zoom;\n    }\n}","export class Contact {\n    name:string;\n    id:number;\n    message : string;\n    email:string;\n    phone?:string;\n  \n  }\n  \n","export class Like {\n    authorId:string;\n\n    constructor(authorId:string){\n        this.authorId = authorId;\n    }\n}","export class Password{\n    oldPassword:string;\n    newPassword:string;\n\n    constructor(oldPassword:string, newPassword:string){\n        this.oldPassword = oldPassword;\n        this.newPassword = newPassword;\n    }\n}","import { Like } from './Like';\n\nexport class Review {\n    id:string;\n    content:string;\n    rating:number;\n    patientId:string;\n    likes:Like[];\n    \n    constructor(content:string, likes:Like[], rating:number, authorId:string){\n        this.content = content;\n        this.likes = likes;\n        this.rating = rating;\n        this.patientId = authorId;\n    };\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TokenStorageService } from './token-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthGuard implements CanActivate {\n  constructor(private router: Router, private authStorage: TokenStorageService) {\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot):\n    Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if ((this.authStorage.getUser() == null) || (this.authStorage.getUserType() !== \"ADMIN\")){\n        alert('You are not allowed to view this page. You are redirected to login Page');\n        console.log(\"next : \" + next);\n        console.log(\"state : \" + state);\n        this.router.navigate([\"admin/login\"],{ queryParams: { retUrl: state.url} });\n            return false;\n      }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Appointment } from '../models/Appointment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService {\n\n  appoitmentUrl:string= \"http://localhost:8080/appointments\";\n  constructor(private http:HttpClient) { }\n\n\n  add(appointment:Appointment):Observable<Appointment>{\n   return this.http.post<Appointment>(this.appoitmentUrl, appointment);\n  }\n\n  update(appointment:Appointment):Observable<Appointment>{\n    return this.http.put<Appointment>(this.appoitmentUrl, appointment);\n   }\n\n  getAppointments():Observable<Appointment[]>{\n    return this.http.get<Appointment[]>(this.appoitmentUrl);\n  }\n\n  getAllDoctorAppoitments(doctorId:string):Observable<Appointment[]>{\n    return this.http.get<Appointment[]>(this.appoitmentUrl + '/doctor/' + doctorId);\n  }\n\n  getAllPatientAppoitments(patientId:string):Observable<Appointment[]>{\n    return this.http.get<Appointment[]>(this.appoitmentUrl + '/patient/' + patientId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\nimport { TokenStorageService } from './token-storage.service';\n\nconst TOKEN_HEADER_KEY = 'Authorization';\nconst USER_TYPE_HEADER_KEY = 'User-Type';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private token: TokenStorageService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    let authReq = req;\n    const token = this.token.getToken();\n    const userType = this.token.getUserType();\n    let headers = req.headers;\n    if (token != null) {\n      headers = headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token);\n    }\n\n    if (userType != null) {\n      console.log(\"userType\", userType);\n      headers = headers.set(USER_TYPE_HEADER_KEY, userType);\n    }\n    authReq = req.clone({headers: headers});\n    return next.handle(authReq);\n  }\n}","import { Injectable, Output , EventEmitter} from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/User';\n\n// const AUTH_API = 'http://localhost:8080/';\nconst AUTH_USER = 'http://localhost:8080/api/auth/user'\nconst DOCTOR_API = 'http://localhost:8080/api/auth/doctor/'; //TODO make this just /auth/doctor/\nconst PATIENT_API = 'http://localhost:8080/api/auth/patient/';\nconst ADMIN_API = 'http://localhost:8080/api/auth/admin/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  @Output() getLoggedInUser: EventEmitter<User> = new EventEmitter();\n\n  constructor(private http: HttpClient) { }\n\n  login(credentials, api:string): Observable<User> {\n    console.log(\"email: \" + credentials.email + \" password: \" + credentials.password);\n    return this.http.post<User>(api + 'signin', {\n      email: credentials.email,\n      password: credentials.password\n    }, httpOptions);\n    \n  }\n\n  //TODO define registration params\n  register(user, api:string): Observable<any> {\n    return this.http.post(api + 'signup', {\n      email: user.email,\n      password: user.password,\n      phone: user.phone,\n      username: user.username,\n      lastname: user.lastname,\n      firstname: user.firstname\n    }, httpOptions);\n  }\n  //TODO define patients\n\n  doctorLogin(credentials): Observable<User> {\n    return this.login(credentials, DOCTOR_API); \n  }\n\n  //TODO define registration params\n  doctorRegister(user): Observable<any> {\n    return this.register(user, DOCTOR_API);\n  }\n  \n  patientLogin(credentials): Observable<any> {\n    return this.login(credentials, PATIENT_API); \n  }\n\n  //TODO define registration params\n  patientRegister(user): Observable<any> {\n    return this.register(user, PATIENT_API);\n  }\n  \n  adminLogin(credentials): Observable<any> {\n    return this.login(credentials, ADMIN_API); \n  }\n\n  //TODO define registration params\n  adminRegister(user): Observable<any> {\n    return this.register(user, ADMIN_API);\n  }\n\n  getCurrentUser():Observable<User>{\n    return this.http.get<User>(AUTH_USER);\n  }\n  \n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Contact } from '../models/Contact';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n  contactUrl:string = \"http://localhost:8080/contacts\";\n  \n  constructor(private http:HttpClient) { }\n\n  getContacts():Observable<Contact[]> {\n    return this.http.get<Contact[]>(this.contactUrl);\n  }\n\n  addContact(contact:Contact):Observable<Contact> {\n    return this.http.post<Contact>(this.contactUrl, contact);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TokenStorageService } from './token-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoctorAuthGuard implements CanActivate {\n\n  constructor(private router: Router, private authStorage: TokenStorageService) {\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot):\n    Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      \n      if ((this.authStorage.getUser() == null) || (this.authStorage.getUserType() !== \"DOCTOR\")){\n        // alert('You are not allowed to view this page. You are redirected to login Page');\n        this.router.navigate([\"doctor/login\"],{ queryParams: { retUrl: state.url} });\n            return false;\n      }\n    return true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient , HttpParams, HttpEvent, HttpEventType, HttpRequest} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from  'rxjs/operators';\nimport { Doctor } from '../models/Doctor';\nimport { Clinic } from '../models/Clinic';\nimport { Password } from '../models/Password';\n\nconst API_URL = 'http://localhost:8080/api/test/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoctorService {\n  doctorUrl:string = \"http://localhost:8080/doctors\";\n  \n  constructor(private http:HttpClient) { }\n\n  \n  getDoctors():Observable<Doctor[]> {\n    return this.http.get<Doctor[]>(this.doctorUrl);\n  }\n\n  getById(id:string):Observable<Doctor>{\n    return this.http.get<Doctor>(this.doctorUrl + \"/\" + id);\n  }\n\n  updateDoctor(doctor:Doctor):Observable<Doctor>{\n    return this.http.put<Doctor>(this.doctorUrl, doctor);\n  }\n  \n  \n  getByUsername(username:string):Observable<Doctor>{\n    return this.http.get<Doctor>(this.doctorUrl + \"/username/\" + username);\n  }\n\n  \n  search(city:string, query:string):Observable<Doctor[]>{\n    const params = new HttpParams()\n      .set('city', city)\n      .set('query', query);\n    console.log(\"doc service\", \"city: \" + city, \"query : \" + query);\n    return this.http.get<Doctor[]>(this.doctorUrl, {'params': params})\n  }\n\n  getAvatar(id:string): Observable<any>{\n    return this.http.get(this.doctorUrl +  \"/\" + id + '/avatar');\n  }\n\n  uploadAvatar(doctorId:string, file:File):Observable<HttpEvent<any>>{\n    const formData: FormData = new FormData();\n\n    formData.append('avatar', file);\n    const req = new HttpRequest('POST', this.doctorUrl + '/' + doctorId + '/avatar', formData, {\n      reportProgress: true,\n      responseType: 'json'\n    });\n    return this.http.request(req);\n\n  }\n\n  getClinic(id:string): Observable<Clinic>{\n    return this.http.get<Clinic>(this.doctorUrl +  \"/\" + id + '/clinic');\n  }\n\n  getClinicPhotos(id:string): Observable<Array<any>>{\n    return this.http.get<Array<any>>(this.doctorUrl +  \"/\" + id + '/clinic/photos');\n  }\n\n  updateClinic(doctorId:string, clinic:Clinic):Observable<Clinic>{\n    return this.http.post<Clinic>(this.doctorUrl + '/' + doctorId + '/clinic', clinic);\n  }\n\n  deleteClinicPhoto(doctorId:string, photoId:string):Observable<any>{\n    return this.http.delete(this.doctorUrl + '/' + doctorId + '/clinic/photos/' + photoId);\n  }\n\n  uploadClinicPhoto(doctorId:string, file:File):Observable<HttpEvent<any>>{\n    const formData: FormData = new FormData();\n\n    formData.append('photo', file);\n    const req = new HttpRequest('POST', this.doctorUrl + '/' + doctorId + '/clinic/photos', formData, {\n      reportProgress: true,\n      responseType: 'json'\n    });\n    return this.http.request(req);\n\n  }\n\n  updatePassword(doctorId:string, password:Password):Observable<any>{\n    return this.http.post<any>(this.doctorUrl + '/' + doctorId + '/password',password);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TokenStorageService } from './token-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientAuthGuard implements CanActivate {\n  constructor(private router: Router, private authStorage: TokenStorageService) {\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot):\n    Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if ((this.authStorage.getUser() == null) || (this.authStorage.getUserType() !== \"PATIENT\")){\n        //alert('You are not allowed to view this page. You are redirected to login Page');\n        this.router.navigate([\"patient/login\"],{ queryParams: { retUrl: state.url} });\n            return false;\n      }\n    return true;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEvent} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Patient } from '../models/Patient';\nimport { Password } from '../models/Password';\n\nconst baseUrl = 'http://localhost:8080/patients';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n\n  constructor(private http: HttpClient) { }\n  //TODO Ayoub chaque method doit avoir le type de retour\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n  getById(id):Observable<Patient>{\n    return this.http.get<Patient>(`${baseUrl}/${id}`);\n  }\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n  update(id, data) {\n    return this.http.put( `${baseUrl}/${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n\n  getAvatar(id:string): Observable<any>{\n    return this.http.get(baseUrl +  \"/\" + id + '/avatar');\n  }\n\n  uploadAvatar(patientId:string, file:File):Observable<HttpEvent<any>>{\n    const formData: FormData = new FormData();\n\n    formData.append('avatar', file);\n    const req = new HttpRequest('POST', baseUrl + '/' + patientId + '/avatar', formData, {\n      reportProgress: true,\n      responseType: 'json'\n    });\n    return this.http.request(req);\n\n  }\n\n  updatePassword(patientId:string, password:Password):Observable<any>{\n    return this.http.post<any>(baseUrl + '/' + patientId + '/password',password);\n  }\n\n  updatePatient(patirnt:Patient):Observable<Patient>{\n    return this.http.put<Patient>(baseUrl, patirnt);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Review } from '../models/Review';\nimport { HttpClient } from '@angular/common/http';\nimport { Like } from '../models/Like';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReviewService {\n  doctorUrl:string = \"http://localhost:8080/doctors\";\n  constructor(private http:HttpClient) { }\n\n  getReviews(doctorId:string):Observable<Review[]>{\n    return this.http.get<Review[]>(this.doctorUrl + '/' + doctorId +  '/reviews');\n  }\n  addReview(doctorId:string, review:Review):Observable<Review>{\n    console.log(\"review in service: \", review);\n    return this.http.post<Review>(this.doctorUrl + '/' + doctorId + '/reviews', review);\n  }\n  updateReview(doctorId:string, review:Review):Observable<Review>{\n    return this.http.put<Review>(this.doctorUrl+ '/' + doctorId + '/reviews/' + review.id, review);\n  }\n\n  deleteReview(doctorId:string, reviewId:string):Observable<any>{\n    return this.http.delete(this.doctorUrl + '/' + doctorId + '/reviews/' + reviewId);\n  }\n\n  likeReview(reviewId:string, like:Like):Observable<Like>{\n    return this.http.post<Like>(this.doctorUrl+ '/reviews/' + reviewId +'/like', like);\n  }\n\n  unlikeReview(reviewId:string, like:Like):Observable<Like>{\n    return this.http.post<Like>(this.doctorUrl+ '/reviews/' + reviewId +'/unlike', like);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../models/User';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\nconst USER_TYPE = 'user-type';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  constructor() { }\n\n  signOut() {\n    //window.sessionStorage.clear();\n    localStorage.clear();\n  }\n\n  \n  public saveToken(token: string) {\n    console.log(\"saving in storage \" + TOKEN_KEY  + \" : \" + token);\n    //window.sessionStorage.removeItem(TOKEN_KEY);\n    //window.sessionStorage.setItem(TOKEN_KEY, token);\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.setItem(TOKEN_KEY, token);\n  }\n  \n  public getToken(): string {\n    // return window.sessionStorage.getItem(TOKEN_KEY);\n    return localStorage.getItem(TOKEN_KEY);\n  }\n\n  \n  public saveUserType(userType: string) {\n    console.log(\"saving in storage \" + USER_TYPE  + \" : \" + userType);\n    // window.sessionStorage.removeItem(USER_TYPE);\n    // window.sessionStorage.setItem(USER_TYPE, userType);\n    localStorage.removeItem(USER_TYPE);\n    localStorage.setItem(USER_TYPE, userType);\n    \n  }\n\n  public getUserType(): string {\n    // return sessionStorage.getItem(USER_TYPE);\n    return localStorage.getItem(USER_TYPE);\n  }\n\n  \n\n  public saveUser(user:User) {\n    console.log(\"saving in storage \" + USER_KEY  + \" : \" + user);\n    localStorage.removeItem(USER_KEY);\n    localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser():User{\n    return JSON.parse(localStorage.getItem(USER_KEY));\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}